// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Router expect to render without error 1`] = `
<Suspense
  fallback={Symbol(react.fragment)}
  routes={
    Array [
      Object {
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "path": "/scappolicies",
        "requiredPermissions": Array [
          "compliance:*:*",
          "compliance:policy:read",
        ],
        "title": "SCAP policies",
      },
      Object {
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "modal": true,
        "path": "/scappolicies/new",
        "requiredPermissions": Array [
          "compliance:*:*",
          "compliance:policy:create",
        ],
        "title": "SCAP policies",
      },
      Object {
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "defaultTitle": "SCAP policies",
        "path": "/scappolicies/:policy_id",
        "requiredPermissions": Array [
          "compliance:*:*",
          "compliance:policy:read",
        ],
        "title": "$entityTitle - SCAP policies",
      },
      Object {
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "defaultTitle": "SCAP policies",
        "modal": true,
        "path": "/scappolicies/:policy_id/edit",
        "requiredPermissions": Array [
          "compliance:*:*",
          "compliance:policy:update",
        ],
        "title": "$entityTitle - SCAP policies",
      },
      Object {
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "modal": true,
        "path": "/scappolicies/:policy_id/delete",
        "requiredPermissions": Array [
          "compliance:*:*",
          "compliance:policy:delete",
        ],
        "title": "Delete policy - SCAP policies",
      },
      Object {
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "path": "/reports",
        "requiredPermissions": Array [
          "compliance:*:*",
          "compliance:report:read",
        ],
        "title": "Reports",
      },
      Object {
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "defaultTitle": "Reports",
        "path": "/reports/:report_id",
        "requiredPermissions": Array [
          "compliance:*:*",
          "compliance:report:read",
        ],
        "title": "Report: $entityTitle - Reports",
      },
      Object {
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "modal": true,
        "path": "/reports/:report_id/delete",
        "requiredPermissions": Array [
          "compliance:*:*",
          "compliance:report:delete",
        ],
        "title": "Delete report - Reports",
      },
      Object {
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "defaultTitle": "Reports",
        "modal": true,
        "path": "/reports/:report_id/pdf",
        "requiredPermissions": Array [
          "compliance:*:*",
          "compliance:report_export:read",
        ],
        "title": "Export report - Reports",
      },
      Object {
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "path": "/systems",
        "requiredPermissions": Array [
          "compliance:*:*",
          "compliance:system:read",
        ],
        "title": "Compliance systems",
      },
      Object {
        "component": Object {
          "$$typeof": Symbol(react.lazy),
          "_init": [Function],
          "_payload": Object {
            "_result": [Function],
            "_status": -1,
          },
        },
        "defaultTitle": "Compliance systems",
        "path": "/systems/:inventoryId",
        "requiredPermissions": Array [
          "compliance:*:*",
          "compliance:system:read",
        ],
        "title": "$entityTitle - Compliance systems",
      },
    ]
  }
>
  <Switch
    location={
      Object {
        "pathname": "/reports",
      }
    }
  >
    <Route
      exact={true}
      key="fullpage-route--scappolicies"
      path="/scappolicies"
    >
      <WithPermission
        requiredPermissions={
          Array [
            "compliance:*:*",
            "compliance:policy:read",
          ]
        }
      >
        <lazy
          route={
            Object {
              "component": Object {
                "$$typeof": Symbol(react.lazy),
                "_init": [Function],
                "_payload": Object {
                  "_result": [Function],
                  "_status": -1,
                },
              },
              "isCurrent": false,
              "path": "/scappolicies",
              "requiredPermissions": Array [
                "compliance:*:*",
                "compliance:policy:read",
              ],
              "setTitle": [Function],
              "title": "SCAP policies",
            }
          }
        />
      </WithPermission>
    </Route>
    <Route
      exact={true}
      key="fullpage-route--scappolicies/:policy_id"
      path="/scappolicies/:policy_id"
    >
      <WithPermission
        requiredPermissions={
          Array [
            "compliance:*:*",
            "compliance:policy:read",
          ]
        }
      >
        <lazy
          route={
            Object {
              "component": Object {
                "$$typeof": Symbol(react.lazy),
                "_init": [Function],
                "_payload": Object {
                  "_result": [Function],
                  "_status": -1,
                },
              },
              "defaultTitle": "SCAP policies",
              "isCurrent": false,
              "path": "/scappolicies/:policy_id",
              "requiredPermissions": Array [
                "compliance:*:*",
                "compliance:policy:read",
              ],
              "setTitle": [Function],
              "title": "$entityTitle - SCAP policies",
            }
          }
        />
      </WithPermission>
    </Route>
    <Route
      exact={true}
      key="fullpage-route--reports"
      path="/reports"
    >
      <WithPermission
        requiredPermissions={
          Array [
            "compliance:*:*",
            "compliance:report:read",
          ]
        }
      >
        <lazy
          route={
            Object {
              "component": Object {
                "$$typeof": Symbol(react.lazy),
                "_init": [Function],
                "_payload": Object {
                  "_result": [Function],
                  "_status": -1,
                },
              },
              "isCurrent": true,
              "path": "/reports",
              "requiredPermissions": Array [
                "compliance:*:*",
                "compliance:report:read",
              ],
              "setTitle": [Function],
              "title": "Reports",
            }
          }
        />
      </WithPermission>
    </Route>
    <Route
      exact={true}
      key="fullpage-route--reports/:report_id"
      path="/reports/:report_id"
    >
      <WithPermission
        requiredPermissions={
          Array [
            "compliance:*:*",
            "compliance:report:read",
          ]
        }
      >
        <lazy
          route={
            Object {
              "component": Object {
                "$$typeof": Symbol(react.lazy),
                "_init": [Function],
                "_payload": Object {
                  "_result": [Function],
                  "_status": -1,
                },
              },
              "defaultTitle": "Reports",
              "isCurrent": false,
              "path": "/reports/:report_id",
              "requiredPermissions": Array [
                "compliance:*:*",
                "compliance:report:read",
              ],
              "setTitle": [Function],
              "title": "Report: $entityTitle - Reports",
            }
          }
        />
      </WithPermission>
    </Route>
    <Route
      exact={true}
      key="fullpage-route--systems"
      path="/systems"
    >
      <WithPermission
        requiredPermissions={
          Array [
            "compliance:*:*",
            "compliance:system:read",
          ]
        }
      >
        <lazy
          route={
            Object {
              "component": Object {
                "$$typeof": Symbol(react.lazy),
                "_init": [Function],
                "_payload": Object {
                  "_result": [Function],
                  "_status": -1,
                },
              },
              "isCurrent": false,
              "path": "/systems",
              "requiredPermissions": Array [
                "compliance:*:*",
                "compliance:system:read",
              ],
              "setTitle": [Function],
              "title": "Compliance systems",
            }
          }
        />
      </WithPermission>
    </Route>
    <Route
      exact={true}
      key="fullpage-route--systems/:inventoryId"
      path="/systems/:inventoryId"
    >
      <WithPermission
        requiredPermissions={
          Array [
            "compliance:*:*",
            "compliance:system:read",
          ]
        }
      >
        <lazy
          route={
            Object {
              "component": Object {
                "$$typeof": Symbol(react.lazy),
                "_init": [Function],
                "_payload": Object {
                  "_result": [Function],
                  "_status": -1,
                },
              },
              "defaultTitle": "Compliance systems",
              "isCurrent": false,
              "path": "/systems/:inventoryId",
              "requiredPermissions": Array [
                "compliance:*:*",
                "compliance:system:read",
              ],
              "setTitle": [Function],
              "title": "$entityTitle - Compliance systems",
            }
          }
        />
      </WithPermission>
    </Route>
    <Route
      render={[Function]}
    />
  </Switch>
  <Route
    exact={true}
    key="modal-route--scappolicies/new"
    path="/scappolicies/new"
  >
    <WithPermission
      requiredPermissions={
        Array [
          "compliance:*:*",
          "compliance:policy:create",
        ]
      }
    >
      <lazy
        route={
          Object {
            "component": Object {
              "$$typeof": Symbol(react.lazy),
              "_init": [Function],
              "_payload": Object {
                "_result": [Function],
                "_status": -1,
              },
            },
            "isCurrent": false,
            "modal": true,
            "path": "/scappolicies/new",
            "requiredPermissions": Array [
              "compliance:*:*",
              "compliance:policy:create",
            ],
            "setTitle": [Function],
            "title": "SCAP policies",
          }
        }
      />
    </WithPermission>
  </Route>
  <Route
    exact={true}
    key="modal-route--scappolicies/:policy_id/edit"
    path="/scappolicies/:policy_id/edit"
  >
    <WithPermission
      requiredPermissions={
        Array [
          "compliance:*:*",
          "compliance:policy:update",
        ]
      }
    >
      <lazy
        route={
          Object {
            "component": Object {
              "$$typeof": Symbol(react.lazy),
              "_init": [Function],
              "_payload": Object {
                "_result": [Function],
                "_status": -1,
              },
            },
            "defaultTitle": "SCAP policies",
            "isCurrent": false,
            "modal": true,
            "path": "/scappolicies/:policy_id/edit",
            "requiredPermissions": Array [
              "compliance:*:*",
              "compliance:policy:update",
            ],
            "setTitle": [Function],
            "title": "$entityTitle - SCAP policies",
          }
        }
      />
    </WithPermission>
  </Route>
  <Route
    exact={true}
    key="modal-route--scappolicies/:policy_id/delete"
    path="/scappolicies/:policy_id/delete"
  >
    <WithPermission
      requiredPermissions={
        Array [
          "compliance:*:*",
          "compliance:policy:delete",
        ]
      }
    >
      <lazy
        route={
          Object {
            "component": Object {
              "$$typeof": Symbol(react.lazy),
              "_init": [Function],
              "_payload": Object {
                "_result": [Function],
                "_status": -1,
              },
            },
            "isCurrent": false,
            "modal": true,
            "path": "/scappolicies/:policy_id/delete",
            "requiredPermissions": Array [
              "compliance:*:*",
              "compliance:policy:delete",
            ],
            "setTitle": [Function],
            "title": "Delete policy - SCAP policies",
          }
        }
      />
    </WithPermission>
  </Route>
  <Route
    exact={true}
    key="modal-route--reports/:report_id/delete"
    path="/reports/:report_id/delete"
  >
    <WithPermission
      requiredPermissions={
        Array [
          "compliance:*:*",
          "compliance:report:delete",
        ]
      }
    >
      <lazy
        route={
          Object {
            "component": Object {
              "$$typeof": Symbol(react.lazy),
              "_init": [Function],
              "_payload": Object {
                "_result": [Function],
                "_status": -1,
              },
            },
            "isCurrent": false,
            "modal": true,
            "path": "/reports/:report_id/delete",
            "requiredPermissions": Array [
              "compliance:*:*",
              "compliance:report:delete",
            ],
            "setTitle": [Function],
            "title": "Delete report - Reports",
          }
        }
      />
    </WithPermission>
  </Route>
  <Route
    exact={true}
    key="modal-route--reports/:report_id/pdf"
    path="/reports/:report_id/pdf"
  >
    <WithPermission
      requiredPermissions={
        Array [
          "compliance:*:*",
          "compliance:report_export:read",
        ]
      }
    >
      <lazy
        route={
          Object {
            "component": Object {
              "$$typeof": Symbol(react.lazy),
              "_init": [Function],
              "_payload": Object {
                "_result": [Function],
                "_status": -1,
              },
            },
            "defaultTitle": "Reports",
            "isCurrent": false,
            "modal": true,
            "path": "/reports/:report_id/pdf",
            "requiredPermissions": Array [
              "compliance:*:*",
              "compliance:report_export:read",
            ],
            "setTitle": [Function],
            "title": "Export report - Reports",
          }
        }
      />
    </WithPermission>
  </Route>
</Suspense>
`;
