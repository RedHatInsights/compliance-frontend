// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DownloadTableButton expect to render the create button 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(DownloadTableButton)
    selectedEntities={
      Array [
        1,
        2,
        3,
      ]
    }
  >
    <DownloadTableButton
      exportToCSV={[Function]}
      selectedEntities={Array []}
    >
      <Tooltip
        appendTo={[Function]}
        aria="describedby"
        boundary="window"
        className=""
        content={
          <div>
            More actions
          </div>
        }
        distance={15}
        enableFlip={true}
        entryDelay={500}
        exitDelay={500}
        flipBehavior={
          Array [
            "top",
            "right",
            "bottom",
            "left",
            "top",
            "right",
            "bottom",
          ]
        }
        id=""
        isAppLauncher={false}
        isContentLeftAligned={false}
        isVisible={false}
        maxWidth="18.75rem"
        position="top"
        tippyProps={Object {}}
        trigger="mouseenter focus"
        zIndex={9999}
      >
        <PopoverBase
          appendTo={[Function]}
          aria="describedby"
          arrow={true}
          boundary="window"
          content={
            <div
              className=""
              id=""
              role="tooltip"
            >
              <TooltipContent
                isLeftAligned={false}
              >
                <div>
                  More actions
                </div>
              </TooltipContent>
            </div>
          }
          delay={
            Array [
              500,
              500,
            ]
          }
          distance={15}
          flip={true}
          flipBehavior={
            Array [
              "top",
              "right",
              "bottom",
              "left",
              "top",
              "right",
              "bottom",
            ]
          }
          isVisible={false}
          lazy={true}
          maxWidth="18.75rem"
          onCreate={[Function]}
          placement="top"
          popperOptions={
            Object {
              "modifiers": Object {
                "hide": Object {
                  "enabled": true,
                },
                "preventOverflow": Object {
                  "enabled": true,
                },
              },
            }
          }
          theme="pf-tooltip"
          trigger="mouseenter focus"
          zIndex={9999}
        >
          <Dropdown
            dropdownItems={
              Array [
                <DropdownItem
                  onClick={[Function]}
                >
                  Export as CSV
                </DropdownItem>,
                <DropdownItem
                  href="/api/compliance/systems.json?search=(id ^ ())"
                  target="_blank"
                >
                  Export as JSON
                </DropdownItem>,
              ]
            }
            isOpen={false}
            isPlain={true}
            onSelect={[Function]}
            toggle={
              <KebabToggle
                onToggle={[Function]}
                style={
                  Object {
                    "color": "var(--pf-global--icon--Color--light)",
                  }
                }
              />
            }
          >
            <Component
              dropdownItems={
                Array [
                  <DropdownItem
                    onClick={[Function]}
                  >
                    Export as CSV
                  </DropdownItem>,
                  <DropdownItem
                    href="/api/compliance/systems.json?search=(id ^ ())"
                    target="_blank"
                  >
                    Export as JSON
                  </DropdownItem>,
                ]
              }
              isOpen={false}
              isPlain={true}
              toggle={
                <KebabToggle
                  onToggle={[Function]}
                  style={
                    Object {
                      "color": "var(--pf-global--icon--Color--light)",
                    }
                  }
                />
              }
            >
              <ComponentWithOuia
                component={[Function]}
                componentProps={
                  Object {
                    "dropdownItems": Array [
                      <DropdownItem
                        onClick={[Function]}
                      >
                        Export as CSV
                      </DropdownItem>,
                      <DropdownItem
                        href="/api/compliance/systems.json?search=(id ^ ())"
                        target="_blank"
                      >
                        Export as JSON
                      </DropdownItem>,
                    ],
                    "isOpen": false,
                    "isPlain": true,
                    "toggle": <KebabToggle
                      onToggle={[Function]}
                      style={
                        Object {
                          "color": "var(--pf-global--icon--Color--light)",
                        }
                      }
                    />,
                  }
                }
                consumerContext={null}
              >
                <DropdownWithContext
                  autoFocus={true}
                  className=""
                  direction="down"
                  dropdownItems={
                    Array [
                      <DropdownItem
                        onClick={[Function]}
                      >
                        Export as CSV
                      </DropdownItem>,
                      <DropdownItem
                        href="/api/compliance/systems.json?search=(id ^ ())"
                        target="_blank"
                      >
                        Export as JSON
                      </DropdownItem>,
                    ]
                  }
                  isGrouped={false}
                  isOpen={false}
                  isPlain={true}
                  onSelect={[Function]}
                  ouiaComponentType="Dropdown"
                  ouiaContext={
                    Object {
                      "isOuia": false,
                      "ouiaId": null,
                    }
                  }
                  position="left"
                  toggle={
                    <KebabToggle
                      onToggle={[Function]}
                      style={
                        Object {
                          "color": "var(--pf-global--icon--Color--light)",
                        }
                      }
                    />
                  }
                >
                  <div
                    className="pf-c-dropdown"
                  >
                    <KebabToggle
                      ariaHasPopup={true}
                      id="pf-toggle-id-0"
                      isOpen={false}
                      isPlain={true}
                      key=".0"
                      onEnter={[Function]}
                      onToggle={[Function]}
                      parentRef={
                        Object {
                          "current": <div
                            class="pf-c-dropdown"
                          >
                            <button
                              aria-expanded="false"
                              aria-haspopup="true"
                              aria-label="Actions"
                              class="pf-c-dropdown__toggle pf-m-plain"
                              id="pf-toggle-id-0"
                              type="button"
                            >
                              <svg
                                aria-hidden="true"
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style="vertical-align: -0.125em;"
                                viewBox="0 0 192 512"
                                width="1em"
                              >
                                <path
                                  d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                  transform=""
                                />
                              </svg>
                            </button>
                          </div>,
                        }
                      }
                      style={
                        Object {
                          "color": "var(--pf-global--icon--Color--light)",
                        }
                      }
                    >
                      <Toggle
                        aria-label="Actions"
                        ariaHasPopup={true}
                        className=""
                        id="pf-toggle-id-0"
                        isActive={false}
                        isDisabled={false}
                        isFocused={false}
                        isHovered={false}
                        isOpen={false}
                        isPlain={true}
                        isPrimary={false}
                        isSplitButton={false}
                        onEnter={[Function]}
                        onToggle={[Function]}
                        parentRef={
                          Object {
                            "current": <div
                              class="pf-c-dropdown"
                            >
                              <button
                                aria-expanded="false"
                                aria-haspopup="true"
                                aria-label="Actions"
                                class="pf-c-dropdown__toggle pf-m-plain"
                                id="pf-toggle-id-0"
                                type="button"
                              >
                                <svg
                                  aria-hidden="true"
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style="vertical-align: -0.125em;"
                                  viewBox="0 0 192 512"
                                  width="1em"
                                >
                                  <path
                                    d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                    transform=""
                                  />
                                </svg>
                              </button>
                            </div>,
                          }
                        }
                        style={
                          Object {
                            "color": "var(--pf-global--icon--Color--light)",
                          }
                        }
                      >
                        <button
                          aria-expanded={false}
                          aria-haspopup={true}
                          aria-label="Actions"
                          className="pf-c-dropdown__toggle pf-m-plain"
                          disabled={false}
                          id="pf-toggle-id-0"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          style={
                            Object {
                              "color": "var(--pf-global--icon--Color--light)",
                            }
                          }
                          type="button"
                        >
                          <EllipsisVIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                            title={null}
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 192 512"
                              width="1em"
                            >
                              <path
                                d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                transform=""
                              />
                            </svg>
                          </EllipsisVIcon>
                        </button>
                      </Toggle>
                    </KebabToggle>
                  </div>
                </DropdownWithContext>
              </ComponentWithOuia>
            </Component>
          </Dropdown>
          <Portal
            containerInfo={
              <div>
                <div
                  class=""
                  id=""
                  role="tooltip"
                >
                  <div
                    class="pf-c-tooltip__content"
                  >
                    <div>
                      More actions
                    </div>
                  </div>
                </div>
              </div>
            }
          >
            <div
              className=""
              id=""
              role="tooltip"
            >
              <TooltipContent
                isLeftAligned={false}
              >
                <div
                  className="pf-c-tooltip__content"
                >
                  <div>
                    More actions
                  </div>
                </div>
              </TooltipContent>
            </div>
          </Portal>
        </PopoverBase>
      </Tooltip>
    </DownloadTableButton>
  </Connect(DownloadTableButton)>
</Provider>
`;

exports[`DownloadTableButton expect to render the create button 2`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(DownloadTableButton)
    selectedEntities={
      Array [
        1,
        2,
        3,
      ]
    }
  >
    <DownloadTableButton
      exportToCSV={[Function]}
      selectedEntities={Array []}
    >
      <Tooltip
        appendTo={[Function]}
        aria="describedby"
        boundary="window"
        className=""
        content={
          <div>
            More actions
          </div>
        }
        distance={15}
        enableFlip={true}
        entryDelay={500}
        exitDelay={500}
        flipBehavior={
          Array [
            "top",
            "right",
            "bottom",
            "left",
            "top",
            "right",
            "bottom",
          ]
        }
        id=""
        isAppLauncher={false}
        isContentLeftAligned={false}
        isVisible={false}
        maxWidth="18.75rem"
        position="top"
        tippyProps={Object {}}
        trigger="mouseenter focus"
        zIndex={9999}
      >
        <PopoverBase
          appendTo={[Function]}
          aria="describedby"
          arrow={true}
          boundary="window"
          content={
            <div
              className=""
              id=""
              role="tooltip"
            >
              <TooltipContent
                isLeftAligned={false}
              >
                <div>
                  More actions
                </div>
              </TooltipContent>
            </div>
          }
          delay={
            Array [
              500,
              500,
            ]
          }
          distance={15}
          flip={true}
          flipBehavior={
            Array [
              "top",
              "right",
              "bottom",
              "left",
              "top",
              "right",
              "bottom",
            ]
          }
          isVisible={false}
          lazy={true}
          maxWidth="18.75rem"
          onCreate={[Function]}
          placement="top"
          popperOptions={
            Object {
              "modifiers": Object {
                "hide": Object {
                  "enabled": true,
                },
                "preventOverflow": Object {
                  "enabled": true,
                },
              },
            }
          }
          theme="pf-tooltip"
          trigger="mouseenter focus"
          zIndex={9999}
        >
          <Dropdown
            dropdownItems={
              Array [
                <DropdownItem
                  onClick={[Function]}
                >
                  Export as CSV
                </DropdownItem>,
                <DropdownItem
                  href="/api/compliance/systems.json?search=(id ^ ())"
                  target="_blank"
                >
                  Export as JSON
                </DropdownItem>,
              ]
            }
            isOpen={true}
            isPlain={true}
            onSelect={[Function]}
            toggle={
              <KebabToggle
                onToggle={[Function]}
                style={
                  Object {
                    "color": "var(--pf-global--icon--Color--light)",
                  }
                }
              />
            }
          >
            <Component
              dropdownItems={
                Array [
                  <DropdownItem
                    onClick={[Function]}
                  >
                    Export as CSV
                  </DropdownItem>,
                  <DropdownItem
                    href="/api/compliance/systems.json?search=(id ^ ())"
                    target="_blank"
                  >
                    Export as JSON
                  </DropdownItem>,
                ]
              }
              isOpen={true}
              isPlain={true}
              toggle={
                <KebabToggle
                  onToggle={[Function]}
                  style={
                    Object {
                      "color": "var(--pf-global--icon--Color--light)",
                    }
                  }
                />
              }
            >
              <ComponentWithOuia
                component={[Function]}
                componentProps={
                  Object {
                    "dropdownItems": Array [
                      <DropdownItem
                        onClick={[Function]}
                      >
                        Export as CSV
                      </DropdownItem>,
                      <DropdownItem
                        href="/api/compliance/systems.json?search=(id ^ ())"
                        target="_blank"
                      >
                        Export as JSON
                      </DropdownItem>,
                    ],
                    "isOpen": true,
                    "isPlain": true,
                    "toggle": <KebabToggle
                      onToggle={[Function]}
                      style={
                        Object {
                          "color": "var(--pf-global--icon--Color--light)",
                        }
                      }
                    />,
                  }
                }
                consumerContext={null}
              >
                <DropdownWithContext
                  autoFocus={true}
                  className=""
                  direction="down"
                  dropdownItems={
                    Array [
                      <DropdownItem
                        onClick={[Function]}
                      >
                        Export as CSV
                      </DropdownItem>,
                      <DropdownItem
                        href="/api/compliance/systems.json?search=(id ^ ())"
                        target="_blank"
                      >
                        Export as JSON
                      </DropdownItem>,
                    ]
                  }
                  isGrouped={false}
                  isOpen={true}
                  isPlain={true}
                  onSelect={[Function]}
                  ouiaComponentType="Dropdown"
                  ouiaContext={
                    Object {
                      "isOuia": false,
                      "ouiaId": null,
                    }
                  }
                  position="left"
                  toggle={
                    <KebabToggle
                      onToggle={[Function]}
                      style={
                        Object {
                          "color": "var(--pf-global--icon--Color--light)",
                        }
                      }
                    />
                  }
                >
                  <div
                    className="pf-c-dropdown pf-m-expanded"
                  >
                    <KebabToggle
                      ariaHasPopup={true}
                      id="pf-toggle-id-2"
                      isOpen={true}
                      isPlain={true}
                      key=".0"
                      onEnter={[Function]}
                      onToggle={[Function]}
                      parentRef={
                        Object {
                          "current": <div
                            class="pf-c-dropdown pf-m-expanded"
                          >
                            <button
                              aria-expanded="true"
                              aria-haspopup="true"
                              aria-label="Actions"
                              class="pf-c-dropdown__toggle pf-m-plain"
                              id="pf-toggle-id-2"
                              type="button"
                            >
                              <svg
                                aria-hidden="true"
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style="vertical-align: -0.125em;"
                                viewBox="0 0 192 512"
                                width="1em"
                              >
                                <path
                                  d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                  transform=""
                                />
                              </svg>
                            </button>
                            <ul
                              aria-labelledby="pf-toggle-id-2"
                              class="pf-c-dropdown__menu"
                              role="menu"
                            >
                              <li
                                role="menuitem"
                              >
                                <a
                                  aria-disabled="false"
                                  class="pf-c-dropdown__menu-item"
                                  tabindex="-1"
                                >
                                  Export as CSV
                                </a>
                              </li>
                              <li
                                role="menuitem"
                              >
                                <a
                                  aria-disabled="false"
                                  class="pf-c-dropdown__menu-item"
                                  href="/api/compliance/systems.json?search=(id ^ ())"
                                  tabindex="-1"
                                  target="_blank"
                                >
                                  Export as JSON
                                </a>
                              </li>
                            </ul>
                          </div>,
                        }
                      }
                      style={
                        Object {
                          "color": "var(--pf-global--icon--Color--light)",
                        }
                      }
                    >
                      <Toggle
                        aria-label="Actions"
                        ariaHasPopup={true}
                        className=""
                        id="pf-toggle-id-2"
                        isActive={false}
                        isDisabled={false}
                        isFocused={false}
                        isHovered={false}
                        isOpen={true}
                        isPlain={true}
                        isPrimary={false}
                        isSplitButton={false}
                        onEnter={[Function]}
                        onToggle={[Function]}
                        parentRef={
                          Object {
                            "current": <div
                              class="pf-c-dropdown pf-m-expanded"
                            >
                              <button
                                aria-expanded="true"
                                aria-haspopup="true"
                                aria-label="Actions"
                                class="pf-c-dropdown__toggle pf-m-plain"
                                id="pf-toggle-id-2"
                                type="button"
                              >
                                <svg
                                  aria-hidden="true"
                                  fill="currentColor"
                                  height="1em"
                                  role="img"
                                  style="vertical-align: -0.125em;"
                                  viewBox="0 0 192 512"
                                  width="1em"
                                >
                                  <path
                                    d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                    transform=""
                                  />
                                </svg>
                              </button>
                              <ul
                                aria-labelledby="pf-toggle-id-2"
                                class="pf-c-dropdown__menu"
                                role="menu"
                              >
                                <li
                                  role="menuitem"
                                >
                                  <a
                                    aria-disabled="false"
                                    class="pf-c-dropdown__menu-item"
                                    tabindex="-1"
                                  >
                                    Export as CSV
                                  </a>
                                </li>
                                <li
                                  role="menuitem"
                                >
                                  <a
                                    aria-disabled="false"
                                    class="pf-c-dropdown__menu-item"
                                    href="/api/compliance/systems.json?search=(id ^ ())"
                                    tabindex="-1"
                                    target="_blank"
                                  >
                                    Export as JSON
                                  </a>
                                </li>
                              </ul>
                            </div>,
                          }
                        }
                        style={
                          Object {
                            "color": "var(--pf-global--icon--Color--light)",
                          }
                        }
                      >
                        <button
                          aria-expanded={true}
                          aria-haspopup={true}
                          aria-label="Actions"
                          className="pf-c-dropdown__toggle pf-m-plain"
                          disabled={false}
                          id="pf-toggle-id-2"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          style={
                            Object {
                              "color": "var(--pf-global--icon--Color--light)",
                            }
                          }
                          type="button"
                        >
                          <EllipsisVIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                            title={null}
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 192 512"
                              width="1em"
                            >
                              <path
                                d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                transform=""
                              />
                            </svg>
                          </EllipsisVIcon>
                        </button>
                      </Toggle>
                    </KebabToggle>
                    <DropdownMenu
                      aria-labelledby="pf-toggle-id-2"
                      autoFocus={false}
                      className=""
                      component="ul"
                      isGrouped={false}
                      isOpen={true}
                      openedOnEnter={false}
                      position="left"
                    >
                      <ul
                        aria-labelledby="pf-toggle-id-2"
                        autoFocus={false}
                        className="pf-c-dropdown__menu"
                        hidden={false}
                        role="menu"
                      >
                        <DropdownItem
                          index={0}
                          key=".$csv"
                          onClick={[Function]}
                        >
                          <InternalDropdownItem
                            className=""
                            component="a"
                            context={
                              Object {
                                "keyHandler": [Function],
                                "sendRef": [Function],
                              }
                            }
                            enterTriggersArrowDown={false}
                            href=""
                            index={0}
                            isDisabled={false}
                            isHovered={false}
                            onClick={[Function]}
                            role="menuitem"
                            tabIndex={-1}
                            tooltip={null}
                            tooltipProps={Object {}}
                            variant="item"
                          >
                            <li
                              className={null}
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="menuitem"
                            >
                              <a
                                aria-disabled={false}
                                className="pf-c-dropdown__menu-item"
                                href={null}
                                tabIndex={-1}
                              >
                                Export as CSV
                              </a>
                            </li>
                          </InternalDropdownItem>
                        </DropdownItem>
                        <DropdownItem
                          href="/api/compliance/systems.json?search=(id ^ ())"
                          index={1}
                          key=".$json"
                          target="_blank"
                        >
                          <InternalDropdownItem
                            className=""
                            component="a"
                            context={
                              Object {
                                "keyHandler": [Function],
                                "sendRef": [Function],
                              }
                            }
                            enterTriggersArrowDown={false}
                            href="/api/compliance/systems.json?search=(id ^ ())"
                            index={1}
                            isDisabled={false}
                            isHovered={false}
                            onClick={[Function]}
                            role="menuitem"
                            tabIndex={-1}
                            target="_blank"
                            tooltip={null}
                            tooltipProps={Object {}}
                            variant="item"
                          >
                            <li
                              className={null}
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="menuitem"
                            >
                              <a
                                aria-disabled={false}
                                className="pf-c-dropdown__menu-item"
                                href="/api/compliance/systems.json?search=(id ^ ())"
                                tabIndex={-1}
                                target="_blank"
                              >
                                Export as JSON
                              </a>
                            </li>
                          </InternalDropdownItem>
                        </DropdownItem>
                      </ul>
                    </DropdownMenu>
                  </div>
                </DropdownWithContext>
              </ComponentWithOuia>
            </Component>
          </Dropdown>
          <Portal
            containerInfo={
              <div>
                <div
                  class=""
                  id=""
                  role="tooltip"
                >
                  <div
                    class="pf-c-tooltip__content"
                  >
                    <div>
                      More actions
                    </div>
                  </div>
                </div>
              </div>
            }
          >
            <div
              className=""
              id=""
              role="tooltip"
            >
              <TooltipContent
                isLeftAligned={false}
              >
                <div
                  className="pf-c-tooltip__content"
                >
                  <div>
                    More actions
                  </div>
                </div>
              </TooltipContent>
            </div>
          </Portal>
        </PopoverBase>
      </Tooltip>
    </DownloadTableButton>
  </Connect(DownloadTableButton)>
</Provider>
`;
