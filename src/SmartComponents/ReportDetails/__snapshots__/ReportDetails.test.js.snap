// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReportDetails expect to render without error 1`] = `
<StateViewWithError
  stateValues={
    {
      "data": {
        "profile": {
          "benchmark": {
            "version": "0.1.4",
          },
          "businessObjective": {
            "id": "1",
            "title": "BO 1",
          },
          "complianceThreshold": 1,
          "compliantHostCount": 5,
          "description": "profile description",
          "external": false,
          "id": "1",
          "name": "profile1",
          "osMajorVersion": "7",
          "policy": {
            "id": "thepolicyid",
            "name": "the policy name",
            "profiles": [
              {
                "benchmark": {
                  "version": 1,
                },
              },
              {
                "benchmark": {
                  "version": 2,
                },
              },
            ],
          },
          "policyType": "policy type",
          "refId": "121212",
          "testResultHostCount": 10,
          "unsupportedHostCount": 5,
        },
      },
      "error": undefined,
      "loading": undefined,
    }
  }
>
  <StateViewPart
    stateKey="loading"
  >
    <PageHeader>
      <ReportDetailsContentLoader />
    </PageHeader>
    <section
      className="pf-c-page__main-section"
    >
      <EmptyTable>
        <Spinner />
      </EmptyTable>
    </section>
  </StateViewPart>
  <StateViewPart
    stateKey="data"
  >
    <PageHeader>
      <Breadcrumb
        ouiaId="ReportDetailsPathBreadcrumb"
      >
        <BreadcrumbLinkItem
          to="/"
        >
          Compliance
        </BreadcrumbLinkItem>
        <BreadcrumbLinkItem
          to="/reports"
        >
          Reports
        </BreadcrumbLinkItem>
        <BreadcrumbItem
          isActive={true}
        >
          Report: the policy name
        </BreadcrumbItem>
      </Breadcrumb>
      <Grid
        hasGutter={true}
      >
        <GridItem
          lg={9}
          md={9}
          sm={9}
          xl={9}
        >
          <PageHeaderTitle
            title="Report: the policy name"
          />
          <SubPageTitle>
            policy type
          </SubPageTitle>
        </GridItem>
        <GridItem
          className="report-details-button"
          lg={3}
          md={3}
          sm={3}
          xl={3}
        >
          <LinkWithPermission
            Component={[Function]}
            className="pf-u-mr-md"
            componentProps={
              {
                "ouiaId": "ReportDetailsDownloadReportPDFLink",
                "variant": "primary",
              }
            }
            state={
              {
                "profile": {
                  "benchmark": {
                    "version": "0.1.4",
                  },
                  "businessObjective": {
                    "id": "1",
                    "title": "BO 1",
                  },
                  "complianceThreshold": 1,
                  "compliantHostCount": 5,
                  "description": "profile description",
                  "external": false,
                  "id": "1",
                  "name": "profile1",
                  "osMajorVersion": "7",
                  "policy": {
                    "id": "thepolicyid",
                    "name": "the policy name",
                    "profiles": [
                      {
                        "benchmark": {
                          "version": 1,
                        },
                      },
                      {
                        "benchmark": {
                          "version": 2,
                        },
                      },
                    ],
                  },
                  "policyType": "policy type",
                  "refId": "121212",
                  "testResultHostCount": 10,
                  "unsupportedHostCount": 5,
                },
              }
            }
            to="/reports/1/pdf"
          >
            Download PDF
          </LinkWithPermission>
          <LinkWithPermission
            Component={[Function]}
            componentProps={
              {
                "isInline": true,
                "ouiaId": "ReportDetailsDeleteReportLink",
                "variant": "link",
              }
            }
            state={
              {
                "profile": {
                  "benchmark": {
                    "version": "0.1.4",
                  },
                  "businessObjective": {
                    "id": "1",
                    "title": "BO 1",
                  },
                  "complianceThreshold": 1,
                  "compliantHostCount": 5,
                  "description": "profile description",
                  "external": false,
                  "id": "1",
                  "name": "profile1",
                  "osMajorVersion": "7",
                  "policy": {
                    "id": "thepolicyid",
                    "name": "the policy name",
                    "profiles": [
                      {
                        "benchmark": {
                          "version": 1,
                        },
                      },
                      {
                        "benchmark": {
                          "version": 2,
                        },
                      },
                    ],
                  },
                  "policyType": "policy type",
                  "refId": "121212",
                  "testResultHostCount": 10,
                  "unsupportedHostCount": 5,
                },
              }
            }
            to="/reports/1/delete"
          >
            Delete report
          </LinkWithPermission>
        </GridItem>
      </Grid>
      <Grid
        hasGutter={true}
      >
        <GridItem
          lg={12}
          md={12}
          sm={12}
          xl={6}
        >
          <ReportChart
            chartClass="report-details-chart-container"
            hasLegend={true}
            profile={
              {
                "benchmark": {
                  "version": "0.1.4",
                },
                "businessObjective": {
                  "id": "1",
                  "title": "BO 1",
                },
                "complianceThreshold": 1,
                "compliantHostCount": 5,
                "description": "profile description",
                "external": false,
                "id": "1",
                "name": "profile1",
                "osMajorVersion": "7",
                "policy": {
                  "id": "thepolicyid",
                  "name": "the policy name",
                  "profiles": [
                    {
                      "benchmark": {
                        "version": 1,
                      },
                    },
                    {
                      "benchmark": {
                        "version": 2,
                      },
                    },
                  ],
                },
                "policyType": "policy type",
                "refId": "121212",
                "testResultHostCount": 10,
                "unsupportedHostCount": 5,
              }
            }
          />
        </GridItem>
        <GridItem
          lg={12}
          md={12}
          sm={12}
          xl={6}
        >
          <ReportDetailsDescription
            profile={
              {
                "benchmark": {
                  "version": "0.1.4",
                },
                "businessObjective": {
                  "id": "1",
                  "title": "BO 1",
                },
                "complianceThreshold": 1,
                "compliantHostCount": 5,
                "description": "profile description",
                "external": false,
                "id": "1",
                "name": "profile1",
                "osMajorVersion": "7",
                "policy": {
                  "id": "thepolicyid",
                  "name": "the policy name",
                  "profiles": [
                    {
                      "benchmark": {
                        "version": 1,
                      },
                    },
                    {
                      "benchmark": {
                        "version": 2,
                      },
                    },
                  ],
                },
                "policyType": "policy type",
                "refId": "121212",
                "testResultHostCount": 10,
                "unsupportedHostCount": 5,
              }
            }
          />
        </GridItem>
      </Grid>
    </PageHeader>
    <section
      className="pf-c-page__main-section"
    >
      <Grid
        hasGutter={true}
      >
        <GridItem
          span={12}
        >
          <SystemsTable
            columns={
              [
                {
                  "key": "name",
                  "props": {
                    "showLink": true,
                    "showOsInfo": true,
                    "width": 40,
                  },
                  "renderExport": [Function],
                  "renderFunc": [Function],
                  "sortBy": [
                    "name",
                  ],
                  "title": "Name",
                },
                {
                  "key": "groups",
                  "requiresDefault": true,
                  "sortBy": [
                    "groups",
                  ],
                },
                {
                  "key": "tags",
                },
                {
                  "exportKey": "testResultProfiles",
                  "key": "ssg_version",
                  "renderExport": [Function],
                  "renderFunc": [Function],
                  "sortBy": [
                    "ssg_version",
                  ],
                  "title": "SSG version",
                  "transforms": [
                    [Function],
                  ],
                },
                {
                  "exportKey": "profiles",
                  "key": "failedRules",
                  "props": {
                    "width": 5,
                  },
                  "renderExport": [Function],
                  "renderFunc": [Function],
                  "sortBy": [
                    "rulesFailed",
                  ],
                  "title": "Failed rules",
                  "transforms": [
                    [Function],
                  ],
                },
                {
                  "exportKey": "testResultProfiles",
                  "key": "complianceScore",
                  "props": {
                    "width": 5,
                  },
                  "renderExport": [Function],
                  "renderFunc": [Function],
                  "sortBy": [
                    "score",
                  ],
                  "title": "Compliance score",
                  "transforms": [
                    [Function],
                  ],
                },
                {
                  "exportKey": "testResultProfiles",
                  "key": "lastScanned",
                  "props": {
                    "isStatic": true,
                    "width": 10,
                  },
                  "renderExport": [Function],
                  "renderFunc": [Function],
                  "title": "Last scanned",
                  "transforms": [
                    [Function],
                  ],
                },
              ]
            }
            compact={false}
            compliantFilter={true}
            defaultFilter="policy_id = 1"
            enableExport={true}
            policyId="1"
            preselectedSystems={[]}
            remediationsEnabled={true}
            ruleSeverityFilter={true}
            showActions={true}
            showComplianceSystemsInfo={false}
            showGroupsFilter={true}
            showOnlySystemsWithTestResults={false}
            showOsMinorVersionFilter={
              [
                "7",
              ]
            }
            ssgVersions={
              [
                1,
                2,
              ]
            }
            tableProps={
              {
                "rowWrapper": [Function],
              }
            }
          />
        </GridItem>
      </Grid>
    </section>
  </StateViewPart>
</StateViewWithError>
`;

exports[`ReportDetails expect to render without error and ssg Version 1`] = `
<StateViewWithError
  stateValues={
    {
      "data": {
        "profile": {
          "benchmark": {
            "version": "0.1.4",
          },
          "businessObjective": {
            "id": "1",
            "title": "BO 1",
          },
          "complianceThreshold": 1,
          "compliantHostCount": 5,
          "description": "profile description",
          "external": false,
          "id": "1",
          "name": "profile1",
          "osMajorVersion": "7",
          "policy": {
            "id": "thepolicyid",
            "name": "the policy name",
            "profiles": [
              {
                "benchmark": {
                  "version": 1,
                },
              },
              {
                "benchmark": {
                  "version": 2,
                },
              },
            ],
          },
          "policyType": "policy type",
          "refId": "121212",
          "testResultHostCount": 10,
          "unsupportedHostCount": 5,
        },
      },
      "error": undefined,
      "loading": undefined,
    }
  }
>
  <StateViewPart
    stateKey="loading"
  >
    <PageHeader>
      <ReportDetailsContentLoader />
    </PageHeader>
    <section
      className="pf-c-page__main-section"
    >
      <EmptyTable>
        <Spinner />
      </EmptyTable>
    </section>
  </StateViewPart>
  <StateViewPart
    stateKey="data"
  >
    <PageHeader>
      <Breadcrumb
        ouiaId="ReportDetailsPathBreadcrumb"
      >
        <BreadcrumbLinkItem
          to="/"
        >
          Compliance
        </BreadcrumbLinkItem>
        <BreadcrumbLinkItem
          to="/reports"
        >
          Reports
        </BreadcrumbLinkItem>
        <BreadcrumbItem
          isActive={true}
        >
          Report: the policy name
        </BreadcrumbItem>
      </Breadcrumb>
      <Grid
        hasGutter={true}
      >
        <GridItem
          lg={9}
          md={9}
          sm={9}
          xl={9}
        >
          <PageHeaderTitle
            title="Report: the policy name"
          />
          <SubPageTitle>
            policy type
          </SubPageTitle>
        </GridItem>
        <GridItem
          className="report-details-button"
          lg={3}
          md={3}
          sm={3}
          xl={3}
        >
          <LinkWithPermission
            Component={[Function]}
            className="pf-u-mr-md"
            componentProps={
              {
                "ouiaId": "ReportDetailsDownloadReportPDFLink",
                "variant": "primary",
              }
            }
            state={
              {
                "profile": {
                  "benchmark": {
                    "version": "0.1.4",
                  },
                  "businessObjective": {
                    "id": "1",
                    "title": "BO 1",
                  },
                  "complianceThreshold": 1,
                  "compliantHostCount": 5,
                  "description": "profile description",
                  "external": false,
                  "id": "1",
                  "name": "profile1",
                  "osMajorVersion": "7",
                  "policy": {
                    "id": "thepolicyid",
                    "name": "the policy name",
                    "profiles": [
                      {
                        "benchmark": {
                          "version": 1,
                        },
                      },
                      {
                        "benchmark": {
                          "version": 2,
                        },
                      },
                    ],
                  },
                  "policyType": "policy type",
                  "refId": "121212",
                  "testResultHostCount": 10,
                  "unsupportedHostCount": 5,
                },
              }
            }
            to="/reports/1/pdf"
          >
            Download PDF
          </LinkWithPermission>
          <LinkWithPermission
            Component={[Function]}
            componentProps={
              {
                "isInline": true,
                "ouiaId": "ReportDetailsDeleteReportLink",
                "variant": "link",
              }
            }
            state={
              {
                "profile": {
                  "benchmark": {
                    "version": "0.1.4",
                  },
                  "businessObjective": {
                    "id": "1",
                    "title": "BO 1",
                  },
                  "complianceThreshold": 1,
                  "compliantHostCount": 5,
                  "description": "profile description",
                  "external": false,
                  "id": "1",
                  "name": "profile1",
                  "osMajorVersion": "7",
                  "policy": {
                    "id": "thepolicyid",
                    "name": "the policy name",
                    "profiles": [
                      {
                        "benchmark": {
                          "version": 1,
                        },
                      },
                      {
                        "benchmark": {
                          "version": 2,
                        },
                      },
                    ],
                  },
                  "policyType": "policy type",
                  "refId": "121212",
                  "testResultHostCount": 10,
                  "unsupportedHostCount": 5,
                },
              }
            }
            to="/reports/1/delete"
          >
            Delete report
          </LinkWithPermission>
        </GridItem>
      </Grid>
      <Grid
        hasGutter={true}
      >
        <GridItem
          lg={12}
          md={12}
          sm={12}
          xl={6}
        >
          <ReportChart
            chartClass="report-details-chart-container"
            hasLegend={true}
            profile={
              {
                "benchmark": {
                  "version": "0.1.4",
                },
                "businessObjective": {
                  "id": "1",
                  "title": "BO 1",
                },
                "complianceThreshold": 1,
                "compliantHostCount": 5,
                "description": "profile description",
                "external": false,
                "id": "1",
                "name": "profile1",
                "osMajorVersion": "7",
                "policy": {
                  "id": "thepolicyid",
                  "name": "the policy name",
                  "profiles": [
                    {
                      "benchmark": {
                        "version": 1,
                      },
                    },
                    {
                      "benchmark": {
                        "version": 2,
                      },
                    },
                  ],
                },
                "policyType": "policy type",
                "refId": "121212",
                "testResultHostCount": 10,
                "unsupportedHostCount": 5,
              }
            }
          />
        </GridItem>
        <GridItem
          lg={12}
          md={12}
          sm={12}
          xl={6}
        >
          <ReportDetailsDescription
            profile={
              {
                "benchmark": {
                  "version": "0.1.4",
                },
                "businessObjective": {
                  "id": "1",
                  "title": "BO 1",
                },
                "complianceThreshold": 1,
                "compliantHostCount": 5,
                "description": "profile description",
                "external": false,
                "id": "1",
                "name": "profile1",
                "osMajorVersion": "7",
                "policy": {
                  "id": "thepolicyid",
                  "name": "the policy name",
                  "profiles": [
                    {
                      "benchmark": {
                        "version": 1,
                      },
                    },
                    {
                      "benchmark": {
                        "version": 2,
                      },
                    },
                  ],
                },
                "policyType": "policy type",
                "refId": "121212",
                "testResultHostCount": 10,
                "unsupportedHostCount": 5,
              }
            }
          />
        </GridItem>
      </Grid>
    </PageHeader>
    <section
      className="pf-c-page__main-section"
    >
      <Grid
        hasGutter={true}
      >
        <GridItem
          span={12}
        >
          <SystemsTable
            columns={
              [
                {
                  "key": "name",
                  "props": {
                    "showLink": true,
                    "showOsInfo": true,
                    "width": 40,
                  },
                  "renderExport": [Function],
                  "renderFunc": [Function],
                  "sortBy": [
                    "name",
                  ],
                  "title": "Name",
                },
                {
                  "key": "groups",
                  "requiresDefault": true,
                  "sortBy": [
                    "groups",
                  ],
                },
                {
                  "key": "tags",
                },
                {
                  "exportKey": "testResultProfiles",
                  "key": "ssg_version",
                  "renderExport": [Function],
                  "renderFunc": [Function],
                  "sortBy": [
                    "ssg_version",
                  ],
                  "title": "SSG version",
                  "transforms": [
                    [Function],
                  ],
                },
                {
                  "exportKey": "profiles",
                  "key": "failedRules",
                  "props": {
                    "width": 5,
                  },
                  "renderExport": [Function],
                  "renderFunc": [Function],
                  "sortBy": [
                    "rulesFailed",
                  ],
                  "title": "Failed rules",
                  "transforms": [
                    [Function],
                  ],
                },
                {
                  "exportKey": "testResultProfiles",
                  "key": "complianceScore",
                  "props": {
                    "width": 5,
                  },
                  "renderExport": [Function],
                  "renderFunc": [Function],
                  "sortBy": [
                    "score",
                  ],
                  "title": "Compliance score",
                  "transforms": [
                    [Function],
                  ],
                },
                {
                  "exportKey": "testResultProfiles",
                  "key": "lastScanned",
                  "props": {
                    "isStatic": true,
                    "width": 10,
                  },
                  "renderExport": [Function],
                  "renderFunc": [Function],
                  "title": "Last scanned",
                  "transforms": [
                    [Function],
                  ],
                },
              ]
            }
            compact={false}
            compliantFilter={true}
            defaultFilter="policy_id = 1"
            enableExport={true}
            policyId="1"
            preselectedSystems={[]}
            remediationsEnabled={true}
            ruleSeverityFilter={true}
            showActions={true}
            showComplianceSystemsInfo={false}
            showGroupsFilter={true}
            showOnlySystemsWithTestResults={false}
            showOsMinorVersionFilter={
              [
                "7",
              ]
            }
            ssgVersions={
              [
                1,
                2,
              ]
            }
            tableProps={
              {
                "rowWrapper": [Function],
              }
            }
          />
        </GridItem>
      </Grid>
    </section>
  </StateViewPart>
</StateViewWithError>
`;
