// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditPolicySystemsTab expect to render with new tabs alert 1`] = `
<Fragment>
  <SystemsTable
    columns={
      [
        {
          "key": "name",
          "props": {
            "width": 40,
          },
          "renderExport": [Function],
          "renderFunc": [Function],
          "sortBy": [
            "name",
          ],
          "title": "Name",
        },
        {
          "key": "tags",
        },
        {
          "key": "operatingSystem",
          "renderExport": [Function],
          "renderFunc": [Function],
          "sortBy": [
            "osMajorVersion",
            "osMinorVersion",
          ],
          "title": "Operating system",
          "transforms": [
            [Function],
          ],
        },
      ]
    }
    compact={true}
    compliantFilter={false}
    defaultFilter="os_major_version = 7 AND os_minor_version ^ (2,1,3,4) or policy_id = 12345abcde"
    emptyStateComponent={
      <EmptyState
        osMajorVersion="7"
      />
    }
    enableExport={false}
    policyId=""
    prependComponent={
      <PrependComponent
        osMajorVersion="7"
      />
    }
    preselectedSystems={[]}
    remediationsEnabled={false}
    ruleSeverityFilter={false}
    showActions={false}
    showComplianceSystemsInfo={false}
    showOnlySystemsWithTestResults={false}
    showOsMinorVersionFilter={
      [
        "7",
      ]
    }
  />
</Fragment>
`;

exports[`EditPolicySystemsTab expect to render without error 1`] = `
<Fragment>
  <SystemsTable
    columns={
      [
        {
          "key": "name",
          "props": {
            "width": 40,
          },
          "renderExport": [Function],
          "renderFunc": [Function],
          "sortBy": [
            "name",
          ],
          "title": "Name",
        },
        {
          "key": "tags",
        },
        {
          "key": "operatingSystem",
          "renderExport": [Function],
          "renderFunc": [Function],
          "sortBy": [
            "osMajorVersion",
            "osMinorVersion",
          ],
          "title": "Operating system",
          "transforms": [
            [Function],
          ],
        },
      ]
    }
    compact={true}
    compliantFilter={false}
    defaultFilter="os_major_version = 7 AND os_minor_version ^ (2,1,3,4) or policy_id = 12345abcde"
    emptyStateComponent={
      <EmptyState
        osMajorVersion="7"
      />
    }
    enableExport={false}
    policyId=""
    prependComponent={
      <PrependComponent
        osMajorVersion="7"
      />
    }
    preselectedSystems={[]}
    remediationsEnabled={false}
    ruleSeverityFilter={false}
    showActions={false}
    showComplianceSystemsInfo={false}
    showOnlySystemsWithTestResults={false}
    showOsMinorVersionFilter={
      [
        "7",
      ]
    }
  />
</Fragment>
`;
