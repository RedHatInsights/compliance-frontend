// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Reports expect to render emptystate 1`] = `
<StateViewWithError
  stateValues={
    Object {
      "data": Object {
        "profiles": Object {
          "edges": Array [],
        },
      },
      "error": undefined,
      "loading": undefined,
    }
  }
>
  <StateViewPart
    stateKey="loading"
  >
    <ReportsHeader />
    <Connect(Main)>
      <LoadingView />
    </Connect(Main)>
  </StateViewPart>
  <StateViewPart
    stateKey="data"
  >
    <ReportsHeader />
    <Connect(Main)>
      <ReportsEmptyState />
    </Connect(Main)>
  </StateViewPart>
</StateViewWithError>
`;

exports[`Reports expect to render loading 1`] = `
<StateViewWithError
  stateValues={
    Object {
      "data": undefined,
      "error": false,
      "loading": true,
    }
  }
>
  <StateViewPart
    stateKey="loading"
  >
    <ReportsHeader />
    <Connect(Main)>
      <LoadingView />
    </Connect(Main)>
  </StateViewPart>
  <StateViewPart
    stateKey="data"
  >
    <ReportsHeader />
    <Connect(Main)>
      <ReportsEmptyState />
    </Connect(Main)>
  </StateViewPart>
</StateViewWithError>
`;

exports[`Reports expect to render without error 1`] = `
<StateViewWithError
  stateValues={
    Object {
      "data": Object {
        "profiles": Object {
          "edges": Array [
            Object {
              "node": Object {
                "businessObjective": Object {
                  "id": "1",
                  "title": "BO 1",
                },
                "complianceThreshold": 1,
                "compliantHostCount": 1,
                "description": "profile description",
                "id": "1",
                "name": "profile1",
                "refId": "121212",
                "totalHostCount": 1,
              },
            },
          ],
        },
      },
      "error": undefined,
      "loading": undefined,
    }
  }
>
  <StateViewPart
    stateKey="loading"
  >
    <ReportsHeader />
    <Connect(Main)>
      <LoadingView />
    </Connect(Main)>
  </StateViewPart>
  <StateViewPart
    stateKey="data"
  >
    <ReportsHeader />
    <Connect(Main)>
      <ReportCardGrid
        profiles={
          Array [
            Object {
              "businessObjective": Object {
                "id": "1",
                "title": "BO 1",
              },
              "complianceThreshold": 1,
              "compliantHostCount": 1,
              "description": "profile description",
              "id": "1",
              "name": "profile1",
              "refId": "121212",
              "totalHostCount": 1,
            },
          ]
        }
      />
    </Connect(Main)>
  </StateViewPart>
</StateViewWithError>
`;
