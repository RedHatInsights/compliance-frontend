// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditPolicyDetails expect to render without error 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <EditPolicyDetails
    profile={
      Object {
        "complianceThreshold": 100,
        "description": "This profile demonstrates compliance against the U.S. Government Commercial Cloud Services (C2S)",
        "id": "197eb783-7bca-45c5-978d-c1e89b0118da",
        "name": "C2S for Red Hat Enterprise Linux 6",
        "refId": "xccdf_org.ssgproject.content_profile_C2S",
      }
    }
  >
    <TextContent>
      <div
        className="pf-c-content"
      >
        <Text
          component="h1"
        >
          <h1
            className=""
            data-pf-content={true}
          >
            Policy details
          </h1>
        </Text>
      </div>
    </TextContent>
    <br />
    <Form
      id="editpolicydetails"
    >
      <form
        className="pf-c-form"
        id="editpolicydetails"
        noValidate={true}
      >
        <FormGroup
          fieldId="name"
          isRequired={true}
          label="Policy name"
        >
          <div
            className="pf-c-form__group"
          >
            <label
              className="pf-c-form__label"
              htmlFor="name"
            >
              <span
                className="pf-c-form__label-text"
              >
                Policy name
              </span>
              <span
                aria-hidden="true"
                className="pf-c-form__label-required"
              >
                *
              </span>
            </label>
            <Field
              aria-describedby="name"
              component={[Function]}
              id="name"
              isRequired={true}
              name="name"
              type="text"
            />
          </div>
        </FormGroup>
        <FormGroup
          fieldId="refId"
          isRequired={true}
          label="Reference ID"
        >
          <div
            className="pf-c-form__group"
          >
            <label
              className="pf-c-form__label"
              htmlFor="refId"
            >
              <span
                className="pf-c-form__label-text"
              >
                Reference ID
              </span>
              <span
                aria-hidden="true"
                className="pf-c-form__label-required"
              >
                *
              </span>
            </label>
            <Field
              aria-describedby="refId"
              component={[Function]}
              id="refId"
              isDisabled={true}
              name="refId"
              type="text"
            />
          </div>
        </FormGroup>
        <FormGroup
          fieldId="description"
          label="Description"
        >
          <div
            className="pf-c-form__group"
          >
            <label
              className="pf-c-form__label"
              htmlFor="description"
            >
              <span
                className="pf-c-form__label-text"
              >
                Description
              </span>
            </label>
            <Field
              aria-describedby="description"
              component={[Function]}
              id="description"
              name="description"
              type="text"
            />
          </div>
        </FormGroup>
        <withApollo(BusinessObjectiveField)
          businessObjective={Object {}}
          policyId="197eb783-7bca-45c5-978d-c1e89b0118da"
        />
        <ProfileThresholdField
          previousThreshold={100}
          showTitle={false}
        >
          <FormGroup
            fieldId="policy-threshold"
            helperText="A value of 95% or higher is recommended"
            helperTextInvalid="Threshold has to be a number between 0 and 100"
            isValid={true}
            label={
              <React.Fragment>
                Compliance threshold (%) 
                <Popover
                  appendTo={[Function]}
                  aria-label=""
                  bodyContent={
                    <React.Fragment>
                      The compliance threshold defines what percentage of rules must be met in order for a system to be determined "compliant".
                    </React.Fragment>
                  }
                  boundary="window"
                  className=""
                  closeBtnAriaLabel="Close"
                  distance={25}
                  enableFlip={true}
                  flipBehavior={
                    Array [
                      "top",
                      "right",
                      "bottom",
                      "left",
                      "top",
                      "right",
                      "bottom",
                    ]
                  }
                  footerContent={null}
                  headerContent={
                    <Title
                      headingLevel="h3"
                      size="xl"
                    >
                      Compliance threshold
                    </Title>
                  }
                  hideOnOutsideClick={true}
                  isVisible={null}
                  maxWidth="calc(2rem + 18.75rem)"
                  onHidden={[Function]}
                  onHide={[Function]}
                  onMount={[Function]}
                  onShow={[Function]}
                  onShown={[Function]}
                  position="top"
                  shouldClose={[Function]}
                  tippyProps={Object {}}
                  zIndex={9999}
                >
                  <OutlinedQuestionCircleIcon
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                    title={null}
                  />
                </Popover>
              </React.Fragment>
            }
          >
            <div
              className="pf-c-form__group"
            >
              <label
                className="pf-c-form__label"
                htmlFor="policy-threshold"
              >
                <span
                  className="pf-c-form__label-text"
                >
                  Compliance threshold (%) 
                  <Popover
                    appendTo={[Function]}
                    aria-label=""
                    bodyContent={
                      <React.Fragment>
                        The compliance threshold defines what percentage of rules must be met in order for a system to be determined "compliant".
                      </React.Fragment>
                    }
                    boundary="window"
                    className=""
                    closeBtnAriaLabel="Close"
                    distance={25}
                    enableFlip={true}
                    flipBehavior={
                      Array [
                        "top",
                        "right",
                        "bottom",
                        "left",
                        "top",
                        "right",
                        "bottom",
                      ]
                    }
                    footerContent={null}
                    headerContent={
                      <Title
                        headingLevel="h3"
                        size="xl"
                      >
                        Compliance threshold
                      </Title>
                    }
                    hideOnOutsideClick={true}
                    isVisible={null}
                    maxWidth="calc(2rem + 18.75rem)"
                    onHidden={[Function]}
                    onHide={[Function]}
                    onMount={[Function]}
                    onShow={[Function]}
                    onShown={[Function]}
                    position="top"
                    shouldClose={[Function]}
                    tippyProps={Object {}}
                    zIndex={9999}
                  >
                    <PopoverBase
                      appendTo={[Function]}
                      arrow={true}
                      boundary="window"
                      content={<React.Fragment />}
                      distance={25}
                      flip={true}
                      flipBehavior={
                        Array [
                          "top",
                          "right",
                          "bottom",
                          "left",
                          "top",
                          "right",
                          "bottom",
                        ]
                      }
                      hideOnClick={true}
                      interactive={true}
                      interactiveBorder={0}
                      isVisible={null}
                      lazy={true}
                      maxWidth="calc(2rem + 18.75rem)"
                      onCreate={[Function]}
                      onHidden={[Function]}
                      onHide={[Function]}
                      onMount={[Function]}
                      onShow={[Function]}
                      onShown={[Function]}
                      placement="top"
                      popperOptions={
                        Object {
                          "modifiers": Object {
                            "hide": Object {
                              "enabled": true,
                            },
                            "preventOverflow": Object {
                              "enabled": true,
                            },
                          },
                        }
                      }
                      theme="pf-popover"
                      trigger="click"
                      zIndex={9999}
                    >
                      <OutlinedQuestionCircleIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      >
                        <svg
                          aria-hidden={true}
                          aria-labelledby={null}
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style={
                            Object {
                              "verticalAlign": "-0.125em",
                            }
                          }
                          viewBox="0 0 512 512"
                          width="1em"
                        >
                          <path
                            d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z"
                            transform=""
                          />
                        </svg>
                      </OutlinedQuestionCircleIcon>
                      <Portal
                        containerInfo={<div />}
                      />
                    </PopoverBase>
                  </Popover>
                </span>
              </label>
              <Field
                aria-label="compliance threshold"
                component={[Function]}
                defaultValue={100}
                id="complianceThreshold"
                isRequired={true}
                isValid={true}
                name="complianceThreshold"
                onChange={[Function]}
                style={
                  Object {
                    "display": "block",
                    "width": "60%",
                  }
                }
                type="number"
              />
              <div
                aria-live="polite"
                className="pf-c-form__helper-text"
                id="policy-threshold-helper"
              >
                A value of 95% or higher is recommended
              </div>
            </div>
          </FormGroup>
        </ProfileThresholdField>
      </form>
    </Form>
  </EditPolicyDetails>
</Provider>
`;
