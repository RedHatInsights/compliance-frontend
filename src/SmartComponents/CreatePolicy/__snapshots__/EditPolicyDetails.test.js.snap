// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditPolicyDetails expect to render without error 1`] = `
<Fragment>
  <TextContent>
    <Text
      component="h1"
    >
      Details
    </Text>
  </TextContent>
  <br />
  <Form
    id="editpolicydetails"
  >
    <FormGroup
      fieldId="name"
      isRequired={true}
      label="Policy name"
    >
      <Field
        aria-describedby="name"
        component={[Function]}
        id="name"
        isRequired={true}
        name="name"
        type="text"
      />
    </FormGroup>
    <FormGroup
      fieldId="refId"
      isRequired={true}
      label="Reference ID"
    >
      <Field
        aria-describedby="refId"
        component={[Function]}
        id="refId"
        isDisabled={true}
        name="refId"
        type="text"
      />
    </FormGroup>
    <FormGroup
      fieldId="description"
      label="Description"
    >
      <Field
        aria-describedby="description"
        component={[Function]}
        id="description"
        name="description"
        type="text"
      />
    </FormGroup>
    <FormGroup
      fieldId="businessObjective"
      label="Business objective"
    >
      <Field
        aria-describedby="businessObjective"
        component={[Function]}
        id="businessObjective"
        name="businessObjective"
        type="text"
      />
    </FormGroup>
    <ReduxForm
      destroyOnUnmount={false}
      enableReinitialize={false}
      forceUnregisterOnUnmount={true}
      form="policyForm"
      getFormState={[Function]}
      keepDirtyOnReinitialize={false}
      persistentSubmitErrors={false}
      previousThreshold={100}
      pure={true}
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      showTitle={false}
      submitAsSideEffect={false}
      touchOnBlur={true}
      touchOnChange={false}
      updateUnregisteredFields={false}
    />
  </Form>
</Fragment>
`;
