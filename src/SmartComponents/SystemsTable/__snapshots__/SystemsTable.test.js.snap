// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SystemsTable returns 1`] = `
<StateView
  stateValues={
    Object {
      "empty": false,
      "error": undefined,
      "noError": true,
    }
  }
>
  <StateViewPart
    stateKey="error"
  >
    <ErrorPage />
  </StateViewPart>
  <StateViewPart
    stateKey="empty"
  />
  <StateViewPart
    stateKey="noError"
  >
    <mockConstructor
      actions={
        Array [
          Object {
            "onClick": [Function],
            "title": "View in inventory",
          },
        ]
      }
      activeFiltersConfig={
        Object {
          "filters": Array [],
          "onDelete": [Function],
        }
      }
      bulkSelect={
        Object {
          "checked": false,
          "isDisabled": true,
          "items": Array [
            Object {
              "onClick": [Function],
              "props": Object {
                "isDisabled": true,
              },
              "title": "Select none",
            },
            Object {
              "onClick": [Function],
              "title": "Select page (0 items)",
            },
            Object {
              "onClick": [Function],
              "title": "Unselect all (0 items)",
            },
          ],
          "onSelect": undefined,
          "toggleProps": Object {
            "children": Array [
              "0 selected",
            ],
          },
        }
      }
      columns={[Function]}
      dedicatedAction={
        <Memo(Connect(ComplianceRemediationButton))
          allSystems={Array []}
          selectedRules={Array []}
        />
      }
      disableDefaultColumns={true}
      exportConfig={
        Object {
          "isDisabled": true,
          "onSelect": [Function],
        }
      }
      fallback={<Spinner />}
      filterConfig={
        Object {
          "items": Array [
            Object {
              "filterValues": Object {
                "onChange": [Function],
                "value": undefined,
              },
              "id": "name",
              "label": "Name",
              "placeholder": "Filter by name",
              "type": "text",
            },
            Object {
              "className": undefined,
              "filterValues": Object {
                "groups": Array [
                  Object {
                    "groupSelectable": true,
                    "items": Array [
                      Object {
                        "label": "RHEL 7.1",
                        "type": "checkbox",
                        "value": "1",
                      },
                      Object {
                        "label": "RHEL 7.2",
                        "type": "checkbox",
                        "value": "2",
                      },
                      Object {
                        "label": "RHEL 7.3",
                        "type": "checkbox",
                        "value": "3",
                      },
                      Object {
                        "label": "RHEL 7.4",
                        "type": "checkbox",
                        "value": "4",
                      },
                      Object {
                        "label": "RHEL 7.5",
                        "type": "checkbox",
                        "value": "5",
                      },
                      Object {
                        "label": "RHEL 7.6",
                        "type": "checkbox",
                        "value": "6",
                      },
                      Object {
                        "label": "RHEL 7.7",
                        "type": "checkbox",
                        "value": "7",
                      },
                      Object {
                        "label": "RHEL 7.8",
                        "type": "checkbox",
                        "value": "8",
                      },
                      Object {
                        "label": "RHEL 7.9",
                        "type": "checkbox",
                        "value": "9",
                      },
                    ],
                    "label": "RHEL 7",
                    "type": "checkbox",
                    "value": "7",
                  },
                  Object {
                    "groupSelectable": true,
                    "items": Array [
                      Object {
                        "label": "RHEL 8.0",
                        "type": "checkbox",
                        "value": "0",
                      },
                      Object {
                        "label": "RHEL 8.1",
                        "type": "checkbox",
                        "value": "1",
                      },
                      Object {
                        "label": "RHEL 8.2",
                        "type": "checkbox",
                        "value": "2",
                      },
                      Object {
                        "label": "RHEL 8.3",
                        "type": "checkbox",
                        "value": "3",
                      },
                      Object {
                        "label": "RHEL 8.4",
                        "type": "checkbox",
                        "value": "4",
                      },
                    ],
                    "label": "RHEL 8",
                    "type": "checkbox",
                    "value": "8",
                  },
                ],
                "onChange": [Function],
                "selected": undefined,
              },
              "id": "operatingsystem",
              "label": "Operating system",
              "type": "group",
            },
          ],
        }
      }
      getEntities={[Function]}
      hideFilters={
        Object {
          "all": true,
          "tags": false,
        }
      }
      onLoad={[Function]}
      showTags={true}
      tableProps={
        Object {
          "canSelectAll": false,
          "isStickyHeader": true,
          "onSelect": undefined,
        }
      }
      variant=""
    />
  </StateViewPart>
</StateView>
`;

exports[`SystemsTable returns compact 1`] = `
<StateView
  stateValues={
    Object {
      "empty": false,
      "error": undefined,
      "noError": true,
    }
  }
>
  <StateViewPart
    stateKey="error"
  >
    <ErrorPage />
  </StateViewPart>
  <StateViewPart
    stateKey="empty"
  />
  <StateViewPart
    stateKey="noError"
  >
    <mockConstructor
      actions={
        Array [
          Object {
            "onClick": [Function],
            "title": "View in inventory",
          },
        ]
      }
      activeFiltersConfig={
        Object {
          "filters": Array [],
          "onDelete": [Function],
        }
      }
      bulkSelect={
        Object {
          "checked": false,
          "isDisabled": true,
          "items": Array [
            Object {
              "onClick": [Function],
              "props": Object {
                "isDisabled": true,
              },
              "title": "Select none",
            },
            Object {
              "onClick": [Function],
              "title": "Select page (0 items)",
            },
            Object {
              "onClick": [Function],
              "title": "Unselect all (0 items)",
            },
          ],
          "onSelect": undefined,
          "toggleProps": Object {
            "children": Array [
              "0 selected",
            ],
          },
        }
      }
      columns={[Function]}
      dedicatedAction={
        <Memo(Connect(ComplianceRemediationButton))
          allSystems={Array []}
          selectedRules={Array []}
        />
      }
      disableDefaultColumns={true}
      exportConfig={
        Object {
          "isDisabled": true,
          "onSelect": [Function],
        }
      }
      fallback={<Spinner />}
      filterConfig={
        Object {
          "items": Array [
            Object {
              "filterValues": Object {
                "onChange": [Function],
                "value": undefined,
              },
              "id": "name",
              "label": "Name",
              "placeholder": "Filter by name",
              "type": "text",
            },
            Object {
              "className": undefined,
              "filterValues": Object {
                "groups": Array [
                  Object {
                    "groupSelectable": true,
                    "items": Array [
                      Object {
                        "label": "RHEL 7.1",
                        "type": "checkbox",
                        "value": "1",
                      },
                      Object {
                        "label": "RHEL 7.2",
                        "type": "checkbox",
                        "value": "2",
                      },
                      Object {
                        "label": "RHEL 7.3",
                        "type": "checkbox",
                        "value": "3",
                      },
                      Object {
                        "label": "RHEL 7.4",
                        "type": "checkbox",
                        "value": "4",
                      },
                      Object {
                        "label": "RHEL 7.5",
                        "type": "checkbox",
                        "value": "5",
                      },
                      Object {
                        "label": "RHEL 7.6",
                        "type": "checkbox",
                        "value": "6",
                      },
                      Object {
                        "label": "RHEL 7.7",
                        "type": "checkbox",
                        "value": "7",
                      },
                      Object {
                        "label": "RHEL 7.8",
                        "type": "checkbox",
                        "value": "8",
                      },
                      Object {
                        "label": "RHEL 7.9",
                        "type": "checkbox",
                        "value": "9",
                      },
                    ],
                    "label": "RHEL 7",
                    "type": "checkbox",
                    "value": "7",
                  },
                  Object {
                    "groupSelectable": true,
                    "items": Array [
                      Object {
                        "label": "RHEL 8.0",
                        "type": "checkbox",
                        "value": "0",
                      },
                      Object {
                        "label": "RHEL 8.1",
                        "type": "checkbox",
                        "value": "1",
                      },
                      Object {
                        "label": "RHEL 8.2",
                        "type": "checkbox",
                        "value": "2",
                      },
                      Object {
                        "label": "RHEL 8.3",
                        "type": "checkbox",
                        "value": "3",
                      },
                      Object {
                        "label": "RHEL 8.4",
                        "type": "checkbox",
                        "value": "4",
                      },
                    ],
                    "label": "RHEL 8",
                    "type": "checkbox",
                    "value": "8",
                  },
                ],
                "onChange": [Function],
                "selected": undefined,
              },
              "id": "operatingsystem",
              "label": "Operating system",
              "type": "group",
            },
          ],
        }
      }
      getEntities={[Function]}
      hideFilters={
        Object {
          "all": true,
          "tags": false,
        }
      }
      onLoad={[Function]}
      showTags={true}
      tableProps={
        Object {
          "canSelectAll": false,
          "isStickyHeader": true,
          "onSelect": undefined,
        }
      }
      variant="compact"
    />
  </StateViewPart>
</StateView>
`;

exports[`SystemsTable returns showAllSystems 1`] = `
<StateView
  stateValues={
    Object {
      "empty": false,
      "error": undefined,
      "noError": true,
    }
  }
>
  <StateViewPart
    stateKey="error"
  >
    <ErrorPage />
  </StateViewPart>
  <StateViewPart
    stateKey="empty"
  />
  <StateViewPart
    stateKey="noError"
  >
    <mockConstructor
      actions={
        Array [
          Object {
            "onClick": [Function],
            "title": "View in inventory",
          },
        ]
      }
      bulkSelect={
        Object {
          "checked": false,
          "isDisabled": true,
          "items": Array [
            Object {
              "onClick": [Function],
              "props": Object {
                "isDisabled": true,
              },
              "title": "Select none",
            },
            Object {
              "onClick": [Function],
              "title": "Select page (0 items)",
            },
            Object {
              "onClick": [Function],
              "title": "Unselect all (0 items)",
            },
          ],
          "onSelect": undefined,
          "toggleProps": Object {
            "children": Array [
              "0 selected",
            ],
          },
        }
      }
      columns={[Function]}
      disableDefaultColumns={true}
      exportConfig={
        Object {
          "isDisabled": true,
          "onSelect": [Function],
        }
      }
      fallback={<Spinner />}
      getEntities={[Function]}
      hideFilters={
        Object {
          "all": true,
          "tags": false,
        }
      }
      onLoad={[Function]}
      showTags={true}
      tableProps={
        Object {
          "canSelectAll": false,
          "isStickyHeader": true,
          "onSelect": undefined,
        }
      }
      variant=""
    />
  </StateViewPart>
</StateView>
`;

exports[`SystemsTable returns with a showComplianceSystemsInfo 1`] = `
<StateView
  stateValues={
    Object {
      "empty": false,
      "error": undefined,
      "noError": true,
    }
  }
>
  <StateViewPart
    stateKey="error"
  >
    <ErrorPage />
  </StateViewPart>
  <StateViewPart
    stateKey="empty"
  />
  <StateViewPart
    stateKey="noError"
  >
    <Alert
      isInline={true}
      ouiaId="SystemsListIsDifferentAlert"
      title="The list of systems in this view is different than those that appear in the Inventory. Only systems currently associated with or reporting against compliance policies are displayed."
      variant="info"
    />
    <mockConstructor
      actions={
        Array [
          Object {
            "onClick": [Function],
            "title": "View in inventory",
          },
        ]
      }
      activeFiltersConfig={
        Object {
          "filters": Array [],
          "onDelete": [Function],
        }
      }
      bulkSelect={
        Object {
          "checked": false,
          "isDisabled": true,
          "items": Array [
            Object {
              "onClick": [Function],
              "props": Object {
                "isDisabled": true,
              },
              "title": "Select none",
            },
            Object {
              "onClick": [Function],
              "title": "Select page (0 items)",
            },
            Object {
              "onClick": [Function],
              "title": "Unselect all (0 items)",
            },
          ],
          "onSelect": undefined,
          "toggleProps": Object {
            "children": Array [
              "0 selected",
            ],
          },
        }
      }
      columns={[Function]}
      dedicatedAction={
        <Memo(Connect(ComplianceRemediationButton))
          allSystems={Array []}
          selectedRules={Array []}
        />
      }
      disableDefaultColumns={true}
      exportConfig={
        Object {
          "isDisabled": true,
          "onSelect": [Function],
        }
      }
      fallback={<Spinner />}
      filterConfig={
        Object {
          "items": Array [
            Object {
              "filterValues": Object {
                "onChange": [Function],
                "value": undefined,
              },
              "id": "name",
              "label": "Name",
              "placeholder": "Filter by name",
              "type": "text",
            },
            Object {
              "className": undefined,
              "filterValues": Object {
                "groups": Array [
                  Object {
                    "groupSelectable": true,
                    "items": Array [
                      Object {
                        "label": "RHEL 7.1",
                        "type": "checkbox",
                        "value": "1",
                      },
                      Object {
                        "label": "RHEL 7.2",
                        "type": "checkbox",
                        "value": "2",
                      },
                      Object {
                        "label": "RHEL 7.3",
                        "type": "checkbox",
                        "value": "3",
                      },
                      Object {
                        "label": "RHEL 7.4",
                        "type": "checkbox",
                        "value": "4",
                      },
                      Object {
                        "label": "RHEL 7.5",
                        "type": "checkbox",
                        "value": "5",
                      },
                      Object {
                        "label": "RHEL 7.6",
                        "type": "checkbox",
                        "value": "6",
                      },
                      Object {
                        "label": "RHEL 7.7",
                        "type": "checkbox",
                        "value": "7",
                      },
                      Object {
                        "label": "RHEL 7.8",
                        "type": "checkbox",
                        "value": "8",
                      },
                      Object {
                        "label": "RHEL 7.9",
                        "type": "checkbox",
                        "value": "9",
                      },
                    ],
                    "label": "RHEL 7",
                    "type": "checkbox",
                    "value": "7",
                  },
                  Object {
                    "groupSelectable": true,
                    "items": Array [
                      Object {
                        "label": "RHEL 8.0",
                        "type": "checkbox",
                        "value": "0",
                      },
                      Object {
                        "label": "RHEL 8.1",
                        "type": "checkbox",
                        "value": "1",
                      },
                      Object {
                        "label": "RHEL 8.2",
                        "type": "checkbox",
                        "value": "2",
                      },
                      Object {
                        "label": "RHEL 8.3",
                        "type": "checkbox",
                        "value": "3",
                      },
                      Object {
                        "label": "RHEL 8.4",
                        "type": "checkbox",
                        "value": "4",
                      },
                    ],
                    "label": "RHEL 8",
                    "type": "checkbox",
                    "value": "8",
                  },
                ],
                "onChange": [Function],
                "selected": undefined,
              },
              "id": "operatingsystem",
              "label": "Operating system",
              "type": "group",
            },
          ],
        }
      }
      getEntities={[Function]}
      hideFilters={
        Object {
          "all": true,
          "tags": false,
        }
      }
      onLoad={[Function]}
      showTags={true}
      tableProps={
        Object {
          "canSelectAll": false,
          "isStickyHeader": true,
          "onSelect": undefined,
        }
      }
      variant=""
    />
  </StateViewPart>
</StateView>
`;

exports[`SystemsTable returns with compliantFilter 1`] = `
<StateView
  stateValues={
    Object {
      "empty": false,
      "error": undefined,
      "noError": true,
    }
  }
>
  <StateViewPart
    stateKey="error"
  >
    <ErrorPage />
  </StateViewPart>
  <StateViewPart
    stateKey="empty"
  />
  <StateViewPart
    stateKey="noError"
  >
    <mockConstructor
      actions={
        Array [
          Object {
            "onClick": [Function],
            "title": "View in inventory",
          },
        ]
      }
      activeFiltersConfig={
        Object {
          "filters": Array [],
          "onDelete": [Function],
        }
      }
      bulkSelect={
        Object {
          "checked": false,
          "isDisabled": true,
          "items": Array [
            Object {
              "onClick": [Function],
              "props": Object {
                "isDisabled": true,
              },
              "title": "Select none",
            },
            Object {
              "onClick": [Function],
              "title": "Select page (0 items)",
            },
            Object {
              "onClick": [Function],
              "title": "Unselect all (0 items)",
            },
          ],
          "onSelect": undefined,
          "toggleProps": Object {
            "children": Array [
              "0 selected",
            ],
          },
        }
      }
      columns={[Function]}
      dedicatedAction={
        <Memo(Connect(ComplianceRemediationButton))
          allSystems={Array []}
          selectedRules={Array []}
        />
      }
      disableDefaultColumns={true}
      exportConfig={
        Object {
          "isDisabled": true,
          "onSelect": [Function],
        }
      }
      fallback={<Spinner />}
      filterConfig={
        Object {
          "items": Array [
            Object {
              "filterValues": Object {
                "onChange": [Function],
                "value": undefined,
              },
              "id": "name",
              "label": "Name",
              "placeholder": "Filter by name",
              "type": "text",
            },
            Object {
              "filterValues": Object {
                "items": Array [
                  Object {
                    "label": "Compliant",
                    "value": "compliant = true AND supported_ssg = true",
                  },
                  Object {
                    "label": "Non-compliant",
                    "value": "compliant = false AND supported_ssg = true",
                  },
                  Object {
                    "label": "Not supported",
                    "value": "supported_ssg = false",
                  },
                  Object {
                    "label": "Never reported",
                    "value": "reported = false",
                  },
                ],
                "onChange": [Function],
                "value": undefined,
              },
              "id": "compliance",
              "label": "Compliance",
              "placeholder": "Filter by compliance",
              "type": "checkbox",
            },
            Object {
              "filterValues": Object {
                "items": Array [
                  Object {
                    "label": "90 - 100%",
                    "value": "90-101",
                  },
                  Object {
                    "label": "70 - 89%",
                    "value": "70-90",
                  },
                  Object {
                    "label": "50 - 69%",
                    "value": "50-70",
                  },
                  Object {
                    "label": "Less than 50%",
                    "value": "0-50",
                  },
                ],
                "onChange": [Function],
                "value": undefined,
              },
              "id": "compliancescore",
              "label": "Compliance score",
              "placeholder": "Filter by compliance score",
              "type": "checkbox",
            },
            Object {
              "className": undefined,
              "filterValues": Object {
                "groups": Array [
                  Object {
                    "groupSelectable": true,
                    "items": Array [
                      Object {
                        "label": "RHEL 7.1",
                        "type": "checkbox",
                        "value": "1",
                      },
                      Object {
                        "label": "RHEL 7.2",
                        "type": "checkbox",
                        "value": "2",
                      },
                      Object {
                        "label": "RHEL 7.3",
                        "type": "checkbox",
                        "value": "3",
                      },
                      Object {
                        "label": "RHEL 7.4",
                        "type": "checkbox",
                        "value": "4",
                      },
                      Object {
                        "label": "RHEL 7.5",
                        "type": "checkbox",
                        "value": "5",
                      },
                      Object {
                        "label": "RHEL 7.6",
                        "type": "checkbox",
                        "value": "6",
                      },
                      Object {
                        "label": "RHEL 7.7",
                        "type": "checkbox",
                        "value": "7",
                      },
                      Object {
                        "label": "RHEL 7.8",
                        "type": "checkbox",
                        "value": "8",
                      },
                      Object {
                        "label": "RHEL 7.9",
                        "type": "checkbox",
                        "value": "9",
                      },
                    ],
                    "label": "RHEL 7",
                    "type": "checkbox",
                    "value": "7",
                  },
                  Object {
                    "groupSelectable": true,
                    "items": Array [
                      Object {
                        "label": "RHEL 8.0",
                        "type": "checkbox",
                        "value": "0",
                      },
                      Object {
                        "label": "RHEL 8.1",
                        "type": "checkbox",
                        "value": "1",
                      },
                      Object {
                        "label": "RHEL 8.2",
                        "type": "checkbox",
                        "value": "2",
                      },
                      Object {
                        "label": "RHEL 8.3",
                        "type": "checkbox",
                        "value": "3",
                      },
                      Object {
                        "label": "RHEL 8.4",
                        "type": "checkbox",
                        "value": "4",
                      },
                    ],
                    "label": "RHEL 8",
                    "type": "checkbox",
                    "value": "8",
                  },
                ],
                "onChange": [Function],
                "selected": undefined,
              },
              "id": "operatingsystem",
              "label": "Operating system",
              "type": "group",
            },
          ],
        }
      }
      getEntities={[Function]}
      hideFilters={
        Object {
          "all": true,
          "tags": false,
        }
      }
      onLoad={[Function]}
      showTags={true}
      tableProps={
        Object {
          "canSelectAll": false,
          "isStickyHeader": true,
          "onSelect": undefined,
        }
      }
      variant=""
    />
  </StateViewPart>
</StateView>
`;

exports[`SystemsTable returns with showOnlySystemsWithTestResults 1`] = `
<StateView
  stateValues={
    Object {
      "empty": false,
      "error": undefined,
      "noError": true,
    }
  }
>
  <StateViewPart
    stateKey="error"
  >
    <ErrorPage />
  </StateViewPart>
  <StateViewPart
    stateKey="empty"
  />
  <StateViewPart
    stateKey="noError"
  >
    <mockConstructor
      actions={
        Array [
          Object {
            "onClick": [Function],
            "title": "View in inventory",
          },
        ]
      }
      activeFiltersConfig={
        Object {
          "filters": Array [],
          "onDelete": [Function],
        }
      }
      bulkSelect={
        Object {
          "checked": false,
          "isDisabled": true,
          "items": Array [
            Object {
              "onClick": [Function],
              "props": Object {
                "isDisabled": true,
              },
              "title": "Select none",
            },
            Object {
              "onClick": [Function],
              "title": "Select page (0 items)",
            },
            Object {
              "onClick": [Function],
              "title": "Unselect all (0 items)",
            },
          ],
          "onSelect": undefined,
          "toggleProps": Object {
            "children": Array [
              "0 selected",
            ],
          },
        }
      }
      columns={[Function]}
      dedicatedAction={
        <Memo(Connect(ComplianceRemediationButton))
          allSystems={Array []}
          selectedRules={Array []}
        />
      }
      disableDefaultColumns={true}
      exportConfig={
        Object {
          "isDisabled": true,
          "onSelect": [Function],
        }
      }
      fallback={<Spinner />}
      filterConfig={
        Object {
          "items": Array [
            Object {
              "filterValues": Object {
                "onChange": [Function],
                "value": undefined,
              },
              "id": "name",
              "label": "Name",
              "placeholder": "Filter by name",
              "type": "text",
            },
            Object {
              "className": undefined,
              "filterValues": Object {
                "groups": Array [
                  Object {
                    "groupSelectable": true,
                    "items": Array [
                      Object {
                        "label": "RHEL 7.1",
                        "type": "checkbox",
                        "value": "1",
                      },
                      Object {
                        "label": "RHEL 7.2",
                        "type": "checkbox",
                        "value": "2",
                      },
                      Object {
                        "label": "RHEL 7.3",
                        "type": "checkbox",
                        "value": "3",
                      },
                      Object {
                        "label": "RHEL 7.4",
                        "type": "checkbox",
                        "value": "4",
                      },
                      Object {
                        "label": "RHEL 7.5",
                        "type": "checkbox",
                        "value": "5",
                      },
                      Object {
                        "label": "RHEL 7.6",
                        "type": "checkbox",
                        "value": "6",
                      },
                      Object {
                        "label": "RHEL 7.7",
                        "type": "checkbox",
                        "value": "7",
                      },
                      Object {
                        "label": "RHEL 7.8",
                        "type": "checkbox",
                        "value": "8",
                      },
                      Object {
                        "label": "RHEL 7.9",
                        "type": "checkbox",
                        "value": "9",
                      },
                    ],
                    "label": "RHEL 7",
                    "type": "checkbox",
                    "value": "7",
                  },
                  Object {
                    "groupSelectable": true,
                    "items": Array [
                      Object {
                        "label": "RHEL 8.0",
                        "type": "checkbox",
                        "value": "0",
                      },
                      Object {
                        "label": "RHEL 8.1",
                        "type": "checkbox",
                        "value": "1",
                      },
                      Object {
                        "label": "RHEL 8.2",
                        "type": "checkbox",
                        "value": "2",
                      },
                      Object {
                        "label": "RHEL 8.3",
                        "type": "checkbox",
                        "value": "3",
                      },
                      Object {
                        "label": "RHEL 8.4",
                        "type": "checkbox",
                        "value": "4",
                      },
                    ],
                    "label": "RHEL 8",
                    "type": "checkbox",
                    "value": "8",
                  },
                ],
                "onChange": [Function],
                "selected": undefined,
              },
              "id": "operatingsystem",
              "label": "Operating system",
              "type": "group",
            },
          ],
        }
      }
      getEntities={[Function]}
      hideFilters={
        Object {
          "all": true,
          "tags": false,
        }
      }
      onLoad={[Function]}
      showTags={true}
      tableProps={
        Object {
          "canSelectAll": false,
          "isStickyHeader": true,
          "onSelect": undefined,
        }
      }
      variant=""
    />
  </StateViewPart>
</StateView>
`;

exports[`SystemsTable returns without actions 1`] = `
<StateView
  stateValues={
    Object {
      "empty": false,
      "error": undefined,
      "noError": true,
    }
  }
>
  <StateViewPart
    stateKey="error"
  >
    <ErrorPage />
  </StateViewPart>
  <StateViewPart
    stateKey="empty"
  />
  <StateViewPart
    stateKey="noError"
  >
    <mockConstructor
      activeFiltersConfig={
        Object {
          "filters": Array [],
          "onDelete": [Function],
        }
      }
      bulkSelect={
        Object {
          "checked": false,
          "isDisabled": true,
          "items": Array [
            Object {
              "onClick": [Function],
              "props": Object {
                "isDisabled": true,
              },
              "title": "Select none",
            },
            Object {
              "onClick": [Function],
              "title": "Select page (0 items)",
            },
            Object {
              "onClick": [Function],
              "title": "Unselect all (0 items)",
            },
          ],
          "onSelect": undefined,
          "toggleProps": Object {
            "children": Array [
              "0 selected",
            ],
          },
        }
      }
      columns={[Function]}
      dedicatedAction={
        <Memo(Connect(ComplianceRemediationButton))
          allSystems={Array []}
          selectedRules={Array []}
        />
      }
      disableDefaultColumns={true}
      exportConfig={
        Object {
          "isDisabled": true,
          "onSelect": [Function],
        }
      }
      fallback={<Spinner />}
      filterConfig={
        Object {
          "items": Array [
            Object {
              "filterValues": Object {
                "onChange": [Function],
                "value": undefined,
              },
              "id": "name",
              "label": "Name",
              "placeholder": "Filter by name",
              "type": "text",
            },
            Object {
              "className": undefined,
              "filterValues": Object {
                "groups": Array [
                  Object {
                    "groupSelectable": true,
                    "items": Array [
                      Object {
                        "label": "RHEL 7.1",
                        "type": "checkbox",
                        "value": "1",
                      },
                      Object {
                        "label": "RHEL 7.2",
                        "type": "checkbox",
                        "value": "2",
                      },
                      Object {
                        "label": "RHEL 7.3",
                        "type": "checkbox",
                        "value": "3",
                      },
                      Object {
                        "label": "RHEL 7.4",
                        "type": "checkbox",
                        "value": "4",
                      },
                      Object {
                        "label": "RHEL 7.5",
                        "type": "checkbox",
                        "value": "5",
                      },
                      Object {
                        "label": "RHEL 7.6",
                        "type": "checkbox",
                        "value": "6",
                      },
                      Object {
                        "label": "RHEL 7.7",
                        "type": "checkbox",
                        "value": "7",
                      },
                      Object {
                        "label": "RHEL 7.8",
                        "type": "checkbox",
                        "value": "8",
                      },
                      Object {
                        "label": "RHEL 7.9",
                        "type": "checkbox",
                        "value": "9",
                      },
                    ],
                    "label": "RHEL 7",
                    "type": "checkbox",
                    "value": "7",
                  },
                  Object {
                    "groupSelectable": true,
                    "items": Array [
                      Object {
                        "label": "RHEL 8.0",
                        "type": "checkbox",
                        "value": "0",
                      },
                      Object {
                        "label": "RHEL 8.1",
                        "type": "checkbox",
                        "value": "1",
                      },
                      Object {
                        "label": "RHEL 8.2",
                        "type": "checkbox",
                        "value": "2",
                      },
                      Object {
                        "label": "RHEL 8.3",
                        "type": "checkbox",
                        "value": "3",
                      },
                      Object {
                        "label": "RHEL 8.4",
                        "type": "checkbox",
                        "value": "4",
                      },
                    ],
                    "label": "RHEL 8",
                    "type": "checkbox",
                    "value": "8",
                  },
                ],
                "onChange": [Function],
                "selected": undefined,
              },
              "id": "operatingsystem",
              "label": "Operating system",
              "type": "group",
            },
          ],
        }
      }
      getEntities={[Function]}
      hideFilters={
        Object {
          "all": true,
          "tags": false,
        }
      }
      onLoad={[Function]}
      showTags={true}
      tableProps={
        Object {
          "canSelectAll": false,
          "isStickyHeader": true,
          "onSelect": undefined,
        }
      }
      variant=""
    />
  </StateViewPart>
</StateView>
`;

exports[`SystemsTable returns without remediations 1`] = `
<StateView
  stateValues={
    Object {
      "empty": false,
      "error": undefined,
      "noError": true,
    }
  }
>
  <StateViewPart
    stateKey="error"
  >
    <ErrorPage />
  </StateViewPart>
  <StateViewPart
    stateKey="empty"
  />
  <StateViewPart
    stateKey="noError"
  >
    <mockConstructor
      actions={
        Array [
          Object {
            "onClick": [Function],
            "title": "View in inventory",
          },
        ]
      }
      activeFiltersConfig={
        Object {
          "filters": Array [],
          "onDelete": [Function],
        }
      }
      bulkSelect={
        Object {
          "checked": false,
          "isDisabled": true,
          "items": Array [
            Object {
              "onClick": [Function],
              "props": Object {
                "isDisabled": true,
              },
              "title": "Select none",
            },
            Object {
              "onClick": [Function],
              "title": "Select page (0 items)",
            },
            Object {
              "onClick": [Function],
              "title": "Unselect all (0 items)",
            },
          ],
          "onSelect": undefined,
          "toggleProps": Object {
            "children": Array [
              "0 selected",
            ],
          },
        }
      }
      columns={[Function]}
      disableDefaultColumns={true}
      exportConfig={
        Object {
          "isDisabled": true,
          "onSelect": [Function],
        }
      }
      fallback={<Spinner />}
      filterConfig={
        Object {
          "items": Array [
            Object {
              "filterValues": Object {
                "onChange": [Function],
                "value": undefined,
              },
              "id": "name",
              "label": "Name",
              "placeholder": "Filter by name",
              "type": "text",
            },
            Object {
              "className": undefined,
              "filterValues": Object {
                "groups": Array [
                  Object {
                    "groupSelectable": true,
                    "items": Array [
                      Object {
                        "label": "RHEL 7.1",
                        "type": "checkbox",
                        "value": "1",
                      },
                      Object {
                        "label": "RHEL 7.2",
                        "type": "checkbox",
                        "value": "2",
                      },
                      Object {
                        "label": "RHEL 7.3",
                        "type": "checkbox",
                        "value": "3",
                      },
                      Object {
                        "label": "RHEL 7.4",
                        "type": "checkbox",
                        "value": "4",
                      },
                      Object {
                        "label": "RHEL 7.5",
                        "type": "checkbox",
                        "value": "5",
                      },
                      Object {
                        "label": "RHEL 7.6",
                        "type": "checkbox",
                        "value": "6",
                      },
                      Object {
                        "label": "RHEL 7.7",
                        "type": "checkbox",
                        "value": "7",
                      },
                      Object {
                        "label": "RHEL 7.8",
                        "type": "checkbox",
                        "value": "8",
                      },
                      Object {
                        "label": "RHEL 7.9",
                        "type": "checkbox",
                        "value": "9",
                      },
                    ],
                    "label": "RHEL 7",
                    "type": "checkbox",
                    "value": "7",
                  },
                  Object {
                    "groupSelectable": true,
                    "items": Array [
                      Object {
                        "label": "RHEL 8.0",
                        "type": "checkbox",
                        "value": "0",
                      },
                      Object {
                        "label": "RHEL 8.1",
                        "type": "checkbox",
                        "value": "1",
                      },
                      Object {
                        "label": "RHEL 8.2",
                        "type": "checkbox",
                        "value": "2",
                      },
                      Object {
                        "label": "RHEL 8.3",
                        "type": "checkbox",
                        "value": "3",
                      },
                      Object {
                        "label": "RHEL 8.4",
                        "type": "checkbox",
                        "value": "4",
                      },
                    ],
                    "label": "RHEL 8",
                    "type": "checkbox",
                    "value": "8",
                  },
                ],
                "onChange": [Function],
                "selected": undefined,
              },
              "id": "operatingsystem",
              "label": "Operating system",
              "type": "group",
            },
          ],
        }
      }
      getEntities={[Function]}
      hideFilters={
        Object {
          "all": true,
          "tags": false,
        }
      }
      onLoad={[Function]}
      showTags={true}
      tableProps={
        Object {
          "canSelectAll": false,
          "isStickyHeader": true,
          "onSelect": undefined,
        }
      }
      variant=""
    />
  </StateViewPart>
</StateView>
`;

exports[`SystemsTable via @testing-library/react emptyStateComponent should show NO emptystate when tags queries return no results 1`] = `
<div>
  <div>
    <div
      actions="[object Object]"
      class="pf-c-toolbar  ins-c-primary-toolbar"
      data-ouia-component-id="PrimaryToolbar"
      data-ouia-component-type="PF4/Toolbar"
      data-ouia-safe="true"
      fallback="[object Object]"
      hidefilters="[object Object]"
      id="ins-primary-data-toolbar"
      tableprops="[object Object]"
      variant=""
    >
      <div
        class="pf-c-toolbar__content"
      >
        <div
          class="pf-c-toolbar__content-section"
        >
          <div
            class="pf-c-toolbar__group pf-m-filter-group ins-c-primary-toolbar__group-filter pf-m-spacer-md pf-m-space-items-lg"
          >
            <div
              class="pf-c-toolbar__item"
            >
              <div
                class="pf-c-dropdown ins-c-bulk-select"
                data-ouia-component-id="BulkSelect"
                data-ouia-component-type="PF4/Dropdown"
                data-ouia-safe="true"
              >
                <div
                  class="pf-c-dropdown__toggle pf-m-split-button pf-m-disabled"
                >
                  <label
                    class="pf-c-dropdown__toggle-check"
                    for="toggle-checkbox"
                  >
                    <input
                      aria-invalid="false"
                      aria-label="Select all"
                      data-ouia-component-id="BulkSelect"
                      data-ouia-component-type="PF4/DropdownToggleCheckbox"
                      data-ouia-safe="true"
                      id="toggle-checkbox"
                      type="checkbox"
                    />
                    
                  </label>
                  <button
                    aria-expanded="false"
                    aria-haspopup="true"
                    aria-label="Select"
                    class="pf-c-dropdown__toggle-button"
                    data-ouia-component-id="BulkSelect"
                    data-ouia-component-type="PF4/DropdownToggle"
                    data-ouia-safe="true"
                    disabled=""
                    id="pf-dropdown-toggle-id-37"
                    type="button"
                  >
                    <span
                      class="pf-c-dropdown__toggle-text"
                    >
                      0 selected
                    </span>
                    <span
                      class=""
                    >
                      <svg
                        aria-hidden="true"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 320 512"
                        width="1em"
                      >
                        <path
                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                        />
                      </svg>
                    </span>
                  </button>
                </div>
              </div>
            </div>
            <div
              class="pf-c-toolbar__item ins-c-primary-toolbar__filter"
            >
              <div
                class="pf-l-split ins-c-conditional-filter"
              >
                <div
                  class="pf-l-split__item"
                >
                  <div
                    class="pf-c-dropdown ins-c-conditional-filter__group"
                    data-ouia-component-id="ConditionalFilter"
                    data-ouia-component-type="PF4/Dropdown"
                    data-ouia-safe="true"
                  >
                    <button
                      aria-expanded="false"
                      aria-haspopup="true"
                      aria-label="Conditional filter"
                      class="pf-c-dropdown__toggle"
                      data-ouia-component-id="ConditionalFilter"
                      data-ouia-component-type="PF4/DropdownToggle"
                      data-ouia-safe="true"
                      id="pf-dropdown-toggle-id-38"
                      type="button"
                    >
                      <span
                        class="pf-c-dropdown__toggle-text"
                      >
                        <svg
                          aria-hidden="true"
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style="vertical-align: -0.125em;"
                          viewBox="0 0 512 512"
                          width="1em"
                        >
                          <path
                            d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                          />
                        </svg>
                        <span
                          class="ins-c-conditional-filter__value-selector"
                        >
                          Name
                        </span>
                      </span>
                      <span
                        class="pf-c-dropdown__toggle-icon"
                      >
                        <svg
                          aria-hidden="true"
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style="vertical-align: -0.125em;"
                          viewBox="0 0 320 512"
                          width="1em"
                        >
                          <path
                            d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                          />
                        </svg>
                      </span>
                    </button>
                  </div>
                </div>
                <div
                  class="pf-l-split__item pf-m-fill"
                >
                  <input
                    aria-invalid="false"
                    aria-label="text input"
                    class="pf-c-form-control ins-c-conditional-filter "
                    data-ouia-component-id="ConditionalFilter"
                    data-ouia-component-type="PF4/TextInput"
                    data-ouia-safe="true"
                    placeholder="Filter by name"
                    type="text"
                    value=""
                    widget-type="InsightsInput"
                  />
                  <svg
                    aria-hidden="true"
                    class="ins-c-search-icon"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style="vertical-align: -0.125em;"
                    viewBox="0 0 512 512"
                    width="1em"
                  >
                    <path
                      d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                    />
                  </svg>
                </div>
              </div>
            </div>
            <div
              class="pf-c-toolbar__item"
            >
              <button>
                Remediation button mock
              </button>
            </div>
          </div>
          <div
            class="pf-c-toolbar__item pf-m-spacer-sm"
          >
            <div
              class="pf-c-dropdown"
              data-ouia-component-id="Export"
              data-ouia-component-type="PF4/Dropdown"
              data-ouia-safe="true"
            >
              <button
                aria-expanded="false"
                aria-haspopup="true"
                aria-label="Export"
                class="pf-c-dropdown__toggle pf-m-plain"
                data-ouia-component-id="Export"
                data-ouia-component-type="PF4/DropdownToggle"
                data-ouia-safe="true"
                disabled=""
                id="pf-dropdown-toggle-id-39"
                type="button"
              >
                <span>
                  <svg
                    aria-hidden="true"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style="vertical-align: -0.125em;"
                    viewBox="0 0 1024 1024"
                    width="1em"
                  >
                    <path
                      d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                    />
                  </svg>
                </span>
              </button>
            </div>
          </div>
        </div>
        <div
          class="pf-c-toolbar__expandable-content"
          id="ins-primary-data-toolbar-expandable-content-10"
        >
          <div
            class="pf-c-toolbar__group"
          />
        </div>
      </div>
      <div
        class="pf-c-toolbar__content pf-m-hidden"
        hidden=""
      >
        <div
          class="pf-c-toolbar__group"
        />
      </div>
    </div>
    <table
      activefiltersconfig="[object Object]"
      aria-label="Mock inventory table"
      bulkselect="[object Object]"
      class="pf-c-table pf-m-grid-md"
      data-ouia-component-id="OUIA-Generated-Table-12"
      data-ouia-component-type="PF4/Table"
      data-ouia-safe="true"
      dedicatedaction="[object Object]"
      exportconfig="[object Object]"
      fallback="[object Object]"
      filterconfig="[object Object]"
      hidefilters="[object Object]"
      role="grid"
      tableprops="[object Object]"
    />
  </div>
</div>
`;

exports[`SystemsTable via @testing-library/react emptyStateComponent should show an emptystate when there are no results 1`] = `
<div>
  <div>
    Empty State
  </div>
</div>
`;
