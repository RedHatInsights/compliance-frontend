// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SystemsTable Instance functions #deleteFilter set search in state properly 1`] = `
Object {
  "compliancescore": Array [
    "0-49",
    "50-69",
    "70-89",
    "90-100",
  ],
  "compliant": Array [],
  "name": "",
}
`;

exports[`SystemsTable Instance functions #deleteFilter set search in state properly 2`] = `
Object {
  "compliancescore": Array [
    "0-49",
    "50-69",
    "90-100",
  ],
  "compliant": Array [],
  "name": "",
}
`;

exports[`SystemsTable Instance functions #deleteFilter set search in state properly 3`] = `
Object {
  "compliancescore": Array [],
  "compliant": Array [
    "false",
  ],
  "name": "",
}
`;

exports[`SystemsTable Instance functions #deleteFilter set search in state properly 4`] = `
Object {
  "compliancescore": Array [],
  "compliant": Array [],
  "name": "",
}
`;

exports[`SystemsTable Instance functions #onFilterUpdate set search in state properly 1`] = `
Object {
  "compliancescore": Array [],
  "compliant": Array [],
  "name": "",
}
`;

exports[`SystemsTable Instance functions #onFilterUpdate set search in state properly 2`] = `
Object {
  "compliancescore": Array [],
  "compliant": Array [],
  "name": "SEARCH TERM",
}
`;

exports[`SystemsTable Instance functions #onFilterUpdate set search in state properly 3`] = `
Object {
  "compliancescore": Array [],
  "compliant": Array [],
  "name": "",
}
`;

exports[`SystemsTable Instance functions #onFilterUpdate set search in state properly 4`] = `
Object {
  "compliancescore": Array [
    "0-49",
    "50-69",
    "90-100",
  ],
  "compliant": Array [],
  "name": "",
}
`;

exports[`SystemsTable expect to not render a loading state 1`] = `
<ForwardRef
  actions={
    Array [
      Object {
        "onClick": [Function],
        "title": "Edit policies for this system",
      },
      Object {
        "onClick": [Function],
        "title": "View in inventory",
      },
    ]
  }
  activeFiltersConfig={
    Object {
      "filters": Array [],
      "onDelete": [Function],
    }
  }
  exportConfig={
    Object {
      "isDisabled": true,
      "onSelect": [Function],
    }
  }
  filterConfig={
    Object {
      "hideLabel": true,
      "items": Array [
        Object {
          "filterValues": Object {
            "onSubmit": [Function],
            "value": "",
          },
          "id": "name",
          "label": "Name",
          "type": "text",
        },
        Object {
          "filterValues": Object {
            "items": Array [
              Object {
                "label": "Compliant",
                "value": "true",
              },
              Object {
                "label": "Non-compliant",
                "value": "false",
              },
            ],
            "onChange": [Function],
            "value": Array [],
          },
          "id": "compliant",
          "label": "Compliant",
          "type": "checkbox",
        },
        Object {
          "filterValues": Object {
            "items": Array [
              Object {
                "label": "90 - 100%",
                "value": "90-100",
              },
              Object {
                "label": "70 - 89%",
                "value": "70-89",
              },
              Object {
                "label": "50 - 69%",
                "value": "50-69",
              },
              Object {
                "label": "Less than 50%",
                "value": "0-49",
              },
            ],
            "onChange": [Function],
            "value": Array [],
          },
          "id": "compliancescore",
          "label": "Compliance score",
          "type": "checkbox",
        },
      ],
    }
  }
  items={Array []}
  onRefresh={[Function]}
  page={1}
  perPage={50}
  total={0}
>
  <ToolbarGroup>
    <ToolbarItem
      style={
        Object {
          "marginLeft": "var(--pf-global--spacer--lg)",
        }
      }
    >
      <Connect(ComplianceRemediationButton)
        allSystems={Array []}
        selectedRules={Array []}
      />
    </ToolbarItem>
  </ToolbarGroup>
</ForwardRef>
`;

exports[`SystemsTable expect to not show actions if showActions is false 1`] = `
<ForwardRef
  activeFiltersConfig={
    Object {
      "filters": Array [],
      "onDelete": [Function],
    }
  }
  exportConfig={
    Object {
      "isDisabled": true,
      "onSelect": [Function],
    }
  }
  filterConfig={
    Object {
      "hideLabel": true,
      "items": Array [
        Object {
          "filterValues": Object {
            "onSubmit": [Function],
            "value": "",
          },
          "id": "name",
          "label": "Name",
          "type": "text",
        },
        Object {
          "filterValues": Object {
            "items": Array [
              Object {
                "label": "Compliant",
                "value": "true",
              },
              Object {
                "label": "Non-compliant",
                "value": "false",
              },
            ],
            "onChange": [Function],
            "value": Array [],
          },
          "id": "compliant",
          "label": "Compliant",
          "type": "checkbox",
        },
        Object {
          "filterValues": Object {
            "items": Array [
              Object {
                "label": "90 - 100%",
                "value": "90-100",
              },
              Object {
                "label": "70 - 89%",
                "value": "70-89",
              },
              Object {
                "label": "50 - 69%",
                "value": "50-69",
              },
              Object {
                "label": "Less than 50%",
                "value": "0-49",
              },
            ],
            "onChange": [Function],
            "value": Array [],
          },
          "id": "compliancescore",
          "label": "Compliance score",
          "type": "checkbox",
        },
      ],
    }
  }
  items={Array []}
  onRefresh={[Function]}
  page={1}
  perPage={50}
  total={0}
>
  <ToolbarGroup>
    <ToolbarItem
      style={
        Object {
          "marginLeft": "var(--pf-global--spacer--lg)",
        }
      }
    >
      <Connect(ComplianceRemediationButton)
        allSystems={Array []}
        selectedRules={Array []}
      />
    </ToolbarItem>
  </ToolbarGroup>
</ForwardRef>
`;

exports[`SystemsTable expect to render a loading state 1`] = `
<ForwardRef
  actions={
    Array [
      Object {
        "onClick": [Function],
        "title": "Edit policies for this system",
      },
      Object {
        "onClick": [Function],
        "title": "View in inventory",
      },
    ]
  }
  activeFiltersConfig={
    Object {
      "filters": Array [],
      "onDelete": [Function],
    }
  }
  exportConfig={
    Object {
      "isDisabled": true,
      "onSelect": [Function],
    }
  }
  filterConfig={
    Object {
      "hideLabel": true,
      "items": Array [
        Object {
          "filterValues": Object {
            "onSubmit": [Function],
            "value": "",
          },
          "id": "name",
          "label": "Name",
          "type": "text",
        },
        Object {
          "filterValues": Object {
            "items": Array [
              Object {
                "label": "Compliant",
                "value": "true",
              },
              Object {
                "label": "Non-compliant",
                "value": "false",
              },
            ],
            "onChange": [Function],
            "value": Array [],
          },
          "id": "compliant",
          "label": "Compliant",
          "type": "checkbox",
        },
        Object {
          "filterValues": Object {
            "items": Array [
              Object {
                "label": "90 - 100%",
                "value": "90-100",
              },
              Object {
                "label": "70 - 89%",
                "value": "70-89",
              },
              Object {
                "label": "50 - 69%",
                "value": "50-69",
              },
              Object {
                "label": "Less than 50%",
                "value": "0-49",
              },
            ],
            "onChange": [Function],
            "value": Array [],
          },
          "id": "compliancescore",
          "label": "Compliance score",
          "type": "checkbox",
        },
      ],
    }
  }
  items={Array []}
  onRefresh={[Function]}
  page={1}
  perPage={50}
  total={0}
>
  <ToolbarGroup>
    <ToolbarItem
      style={
        Object {
          "marginLeft": "var(--pf-global--spacer--lg)",
        }
      }
    >
      <Connect(ComplianceRemediationButton)
        allSystems={Array []}
        selectedRules={Array []}
      />
    </ToolbarItem>
  </ToolbarGroup>
</ForwardRef>
`;

exports[`SystemsTable expect to set loading state correctly on systemfetch 1`] = `
<mockConstructor
  actions={
    Array [
      Object {
        "onClick": [Function],
        "title": "Edit policies for this system",
      },
      Object {
        "onClick": [Function],
        "title": "View in inventory",
      },
    ]
  }
  activeFiltersConfig={
    Object {
      "filters": Array [],
      "onDelete": [Function],
    }
  }
  exportConfig={
    Object {
      "isDisabled": false,
      "onSelect": [Function],
    }
  }
  filterConfig={
    Object {
      "hideLabel": true,
      "items": Array [
        Object {
          "filterValues": Object {
            "onSubmit": [Function],
            "value": "",
          },
          "id": "name",
          "label": "Name",
          "type": "text",
        },
        Object {
          "filterValues": Object {
            "items": Array [
              Object {
                "label": "Compliant",
                "value": "true",
              },
              Object {
                "label": "Non-compliant",
                "value": "false",
              },
            ],
            "onChange": [Function],
            "value": Array [],
          },
          "id": "compliant",
          "label": "Compliant",
          "type": "checkbox",
        },
        Object {
          "filterValues": Object {
            "items": Array [
              Object {
                "label": "90 - 100%",
                "value": "90-100",
              },
              Object {
                "label": "70 - 89%",
                "value": "70-89",
              },
              Object {
                "label": "50 - 69%",
                "value": "50-69",
              },
              Object {
                "label": "Less than 50%",
                "value": "0-49",
              },
            ],
            "onChange": [Function],
            "value": Array [],
          },
          "id": "compliancescore",
          "label": "Compliance score",
          "type": "checkbox",
        },
      ],
    }
  }
  items={
    Array [
      1,
    ]
  }
  onRefresh={[Function]}
  page={1}
  perPage={50}
  total={1}
>
  <ToolbarGroup>
    <ToolbarItem
      style={
        Object {
          "marginLeft": "var(--pf-global--spacer--lg)",
        }
      }
    >
      <Connect(ComplianceRemediationButton)
        allSystems={Array []}
        selectedRules={Array []}
      />
    </ToolbarItem>
  </ToolbarGroup>
</mockConstructor>
`;

exports[`SystemsTable expect to show actions if showActions is true or by default 1`] = `
<ForwardRef
  actions={
    Array [
      Object {
        "onClick": [Function],
        "title": "Edit policies for this system",
      },
      Object {
        "onClick": [Function],
        "title": "View in inventory",
      },
    ]
  }
  activeFiltersConfig={
    Object {
      "filters": Array [],
      "onDelete": [Function],
    }
  }
  exportConfig={
    Object {
      "isDisabled": true,
      "onSelect": [Function],
    }
  }
  filterConfig={
    Object {
      "hideLabel": true,
      "items": Array [
        Object {
          "filterValues": Object {
            "onSubmit": [Function],
            "value": "",
          },
          "id": "name",
          "label": "Name",
          "type": "text",
        },
        Object {
          "filterValues": Object {
            "items": Array [
              Object {
                "label": "Compliant",
                "value": "true",
              },
              Object {
                "label": "Non-compliant",
                "value": "false",
              },
            ],
            "onChange": [Function],
            "value": Array [],
          },
          "id": "compliant",
          "label": "Compliant",
          "type": "checkbox",
        },
        Object {
          "filterValues": Object {
            "items": Array [
              Object {
                "label": "90 - 100%",
                "value": "90-100",
              },
              Object {
                "label": "70 - 89%",
                "value": "70-89",
              },
              Object {
                "label": "50 - 69%",
                "value": "50-69",
              },
              Object {
                "label": "Less than 50%",
                "value": "0-49",
              },
            ],
            "onChange": [Function],
            "value": Array [],
          },
          "id": "compliancescore",
          "label": "Compliance score",
          "type": "checkbox",
        },
      ],
    }
  }
  items={Array []}
  onRefresh={[Function]}
  page={1}
  perPage={50}
  total={0}
>
  <ToolbarGroup>
    <ToolbarItem
      style={
        Object {
          "marginLeft": "var(--pf-global--spacer--lg)",
        }
      }
    >
      <Connect(ComplianceRemediationButton)
        allSystems={Array []}
        selectedRules={Array []}
      />
    </ToolbarItem>
  </ToolbarGroup>
</ForwardRef>
`;
