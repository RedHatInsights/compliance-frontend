// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PolicyMultiversionRules expect to render without error 1`] = `
<Fragment>
  <PageSection
    variant="light"
  >
    <TabbedRules
      columns={
        Array [
          Object {
            "renderExport": [Function],
            "renderFunc": [Function],
            "sortByProp": "title",
            "title": "Name",
          },
          Object {
            "exportKey": "severity",
            "renderFunc": [Function],
            "sortByArray": Array [
              "high",
              "medium",
              "low",
              "unknown",
            ],
            "sortByProp": "severity",
            "title": "Severity",
          },
          Object {
            "renderExport": [Function],
            "renderFunc": [Function],
            "sortByFunction": [Function],
            "title": "Remediation",
            "transforms": Array [
              [Function],
            ],
          },
        ]
      }
      level={1}
      options={
        Object {
          "dedicatedAction": [Function],
        }
      }
      ouiaId="RHELVersions"
      ruleValues={
        Object {
          "b71376fd-015e-4209-99ac": undefined,
          "b71376fd-015e-4209-99ad": undefined,
          "b71376fd-015e-4209-99af": undefined,
        }
      }
      tabsData={
        Array [
          Object {
            "profile": Object {
              "benchmark": Object {
                "version": "0.1.49",
              },
              "id": "b71376fd-015e-4209-99af",
              "name": "United States Government Configuration Baseline123",
              "osMajorVersion": "7",
              "osMinorVersion": "9",
              "refId": "xccdf_org.ssgproject.content_profile_ospp123",
              "rules": Array [
                Object {
                  "__typename": "Rule",
                  "description": "If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -w /etc/localtime -p wa -k audit_time_rules If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -w /etc/localtime -p wa -k audit_time_rules The -k option allows for the specification of a key in string form that can be used for better reporting capability through ausearch and aureport and should always be used.",
                  "rationale": "Arbitrary changes to the system time can be used to obfuscate nefarious activities in log files, as well as to confuse network services that are highly dependent upon an accurate system time (such as sshd). All changes to the system time should be audited.",
                  "refId": "xccdf_org.ssgproject.content_rule_audit_rules_time_watch_localtime",
                  "remediationAvailable": false,
                  "severity": "medium",
                  "title": "Record Attempts to Alter the localtime File",
                },
                Object {
                  "__typename": "Rule",
                  "description": "If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -F key=time-change If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -F key=time-change If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -F key=time-change If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -F key=time-change The -k option allows for the specification of a key in string form that can be used for better reporting capability through ausearch and aureport. Multiple system calls can be defined on the same line to save space if desired, but is not required. See an example of multiple combined syscalls: -a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=audit_time_rules",
                  "rationale": "Arbitrary changes to the system time can be used to obfuscate nefarious activities in log files, as well as to confuse network services that are highly dependent upon an accurate system time (such as sshd). All changes to the system time should be audited.",
                  "refId": "xccdf_org.ssgproject.content_rule_audit_rules_time_clock_settime",
                  "remediationAvailable": false,
                  "severity": "medium",
                  "title": "Record Attempts to Alter Time Through clock_settime",
                },
              ],
            },
            "systemCount": 2,
          },
          Object {
            "profile": Object {
              "benchmark": Object {
                "version": "0.1.46",
              },
              "id": "b71376fd-015e-4209-99ad",
              "name": "United States Government Configuration Baseline123",
              "osMajorVersion": "7",
              "osMinorVersion": "8",
              "refId": "xccdf_org.ssgproject.content_profile_ospp123",
              "rules": Array [
                Object {
                  "__typename": "Rule",
                  "description": "If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -w /etc/localtime -p wa -k audit_time_rules If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -w /etc/localtime -p wa -k audit_time_rules The -k option allows for the specification of a key in string form that can be used for better reporting capability through ausearch and aureport and should always be used.",
                  "rationale": "Arbitrary changes to the system time can be used to obfuscate nefarious activities in log files, as well as to confuse network services that are highly dependent upon an accurate system time (such as sshd). All changes to the system time should be audited.",
                  "refId": "xccdf_org.ssgproject.content_rule_audit_rules_time_watch_localtime",
                  "remediationAvailable": false,
                  "severity": "medium",
                  "title": "Record Attempts to Alter the localtime File",
                },
                Object {
                  "__typename": "Rule",
                  "description": "If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -F key=time-change If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -F key=time-change If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -F key=time-change If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -F key=time-change The -k option allows for the specification of a key in string form that can be used for better reporting capability through ausearch and aureport. Multiple system calls can be defined on the same line to save space if desired, but is not required. See an example of multiple combined syscalls: -a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=audit_time_rules",
                  "rationale": "Arbitrary changes to the system time can be used to obfuscate nefarious activities in log files, as well as to confuse network services that are highly dependent upon an accurate system time (such as sshd). All changes to the system time should be audited.",
                  "refId": "xccdf_org.ssgproject.content_rule_audit_rules_time_clock_settime",
                  "remediationAvailable": false,
                  "severity": "medium",
                  "title": "Record Attempts to Alter Time Through clock_settime",
                },
              ],
            },
            "systemCount": 1,
          },
        ]
      }
    />
  </PageSection>
</Fragment>
`;
